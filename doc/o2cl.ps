%!PS-Adobe-3.0
%%Creator: groff version 1.19.1
%%CreationDate: Thu May 25 22:08:42 2006
%%DocumentNeededResources: font Times-Roman
%%+ font Helvetica
%%+ font Times-Italic
%%+ font Courier
%%+ font Times-Bold
%%+ font Courier-Oblique
%%+ font Symbol
%%DocumentSuppliedResources: procset grops 1.19 1
%%+ font Symbol-Slanted
%%Pages: 17
%%PageOrder: Ascend
%%DocumentMedia: Default 595 842 0 () ()
%%Orientation: Portrait
%%EndComments
%%BeginDefaults
%%PageMedia: Default
%%EndDefaults
%%BeginProlog
%%BeginResource: procset grops 1.19 1
%!PS-Adobe-3.0 Resource-ProcSet
/setpacking where{
pop
currentpacking
true setpacking
}if
/grops 120 dict dup begin
/SC 32 def
/A/show load def
/B{0 SC 3 -1 roll widthshow}bind def
/C{0 exch ashow}bind def
/D{0 exch 0 SC 5 2 roll awidthshow}bind def
/E{0 rmoveto show}bind def
/F{0 rmoveto 0 SC 3 -1 roll widthshow}bind def
/G{0 rmoveto 0 exch ashow}bind def
/H{0 rmoveto 0 exch 0 SC 5 2 roll awidthshow}bind def
/I{0 exch rmoveto show}bind def
/J{0 exch rmoveto 0 SC 3 -1 roll widthshow}bind def
/K{0 exch rmoveto 0 exch ashow}bind def
/L{0 exch rmoveto 0 exch 0 SC 5 2 roll awidthshow}bind def
/M{rmoveto show}bind def
/N{rmoveto 0 SC 3 -1 roll widthshow}bind def
/O{rmoveto 0 exch ashow}bind def
/P{rmoveto 0 exch 0 SC 5 2 roll awidthshow}bind def
/Q{moveto show}bind def
/R{moveto 0 SC 3 -1 roll widthshow}bind def
/S{moveto 0 exch ashow}bind def
/T{moveto 0 exch 0 SC 5 2 roll awidthshow}bind def
/SF{
findfont exch
[exch dup 0 exch 0 exch neg 0 0]makefont
dup setfont
[exch/setfont cvx]cvx bind def
}bind def
/MF{
findfont
[5 2 roll
0 3 1 roll
neg 0 0]makefont
dup setfont
[exch/setfont cvx]cvx bind def
}bind def
/level0 0 def
/RES 0 def
/PL 0 def
/LS 0 def
/MANUAL{
statusdict begin/manualfeed true store end
}bind def
/PLG{
gsave newpath clippath pathbbox grestore
exch pop add exch pop
}bind def
/BP{
/level0 save def
1 setlinecap
1 setlinejoin
72 RES div dup scale
LS{
90 rotate
}{
0 PL translate
}ifelse
1 -1 scale
}bind def
/EP{
level0 restore
showpage
}bind def
/DA{
newpath arcn stroke
}bind def
/SN{
transform
.25 sub exch .25 sub exch
round .25 add exch round .25 add exch
itransform
}bind def
/DL{
SN
moveto
SN
lineto stroke
}bind def
/DC{
newpath 0 360 arc closepath
}bind def
/TM matrix def
/DE{
TM currentmatrix pop
translate scale newpath 0 0 .5 0 360 arc closepath
TM setmatrix
}bind def
/RC/rcurveto load def
/RL/rlineto load def
/ST/stroke load def
/MT/moveto load def
/CL/closepath load def
/Fr{
setrgbcolor fill
}bind def
/setcmykcolor where{
pop
/Fk{
setcmykcolor fill
}bind def
}if
/Fg{
setgray fill
}bind def
/FL/fill load def
/LW/setlinewidth load def
/Cr/setrgbcolor load def
/setcmykcolor where{
pop
/Ck/setcmykcolor load def
}if
/Cg/setgray load def
/RE{
findfont
dup maxlength 1 index/FontName known not{1 add}if dict begin
{
1 index/FID ne{def}{pop pop}ifelse
}forall
/Encoding exch def
dup/FontName exch def
currentdict end definefont pop
}bind def
/DEFS 0 def
/EBEGIN{
moveto
DEFS begin
}bind def
/EEND/end load def
/CNT 0 def
/level1 0 def
/PBEGIN{
/level1 save def
translate
div 3 1 roll div exch scale
neg exch neg exch translate
0 setgray
0 setlinecap
1 setlinewidth
0 setlinejoin
10 setmiterlimit
[]0 setdash
/setstrokeadjust where{
pop
false setstrokeadjust
}if
/setoverprint where{
pop
false setoverprint
}if
newpath
/CNT countdictstack def
userdict begin
/showpage{}def
/setpagedevice{}def
}bind def
/PEND{
clear
countdictstack CNT sub{end}repeat
level1 restore
}bind def
end def
/setpacking where{
pop
setpacking
}if
%%EndResource
%%EndProlog
%%BeginSetup
%%BeginFeature: *PageSize Default
<< /PageSize [ 595 842 ] /ImagingBBox null >> setpagedevice
%%EndFeature
%%IncludeResource: font Symbol
%%IncludeResource: font Times-Roman
%%IncludeResource: font Helvetica
%%IncludeResource: font Times-Italic
%%IncludeResource: font Courier
%%IncludeResource: font Times-Bold
%%IncludeResource: font Courier-Oblique
%%BeginResource: font Symbol-Slanted
%!PS-Adobe-3.0 Resource-Font
%%DocumentNeededResources: font Symbol
/MakeTransformedFont{
findfont dup maxlength dict begin
{
exch dup dup/FID ne exch/UniqueID ne and{
exch def
}{
pop pop
}ifelse
}forall
/FontBBox
currentdict/FontBBox get
4 array copy def
FontBBox aload pop
4 index transform 4 2 roll
4 index transform 4 2 roll
FontBBox astore pop
FontMatrix exch matrix concatmatrix
/FontMatrix exch def
dup/FontName exch def
currentdict end
definefont pop
}bind def
/Symbol-Slanted
[.89 0.0 15.5 dup sin exch cos div .89 0.0 0.0]
/Symbol
MakeTransformedFont
%%EndResource
grops begin/DEFS 1 dict def DEFS begin/u{.001 mul}bind def end/RES 72
def/PL 841.89 def/LS false def/ENC0[/asciicircum/asciitilde/Scaron
/Zcaron/scaron/zcaron/Ydieresis/trademark/quotesingle/Euro/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/space/exclam/quotedbl/numbersign/dollar/percent
/ampersand/quoteright/parenleft/parenright/asterisk/plus/comma/hyphen
/period/slash/zero/one/two/three/four/five/six/seven/eight/nine/colon
/semicolon/less/equal/greater/question/at/A/B/C/D/E/F/G/H/I/J/K/L/M/N/O
/P/Q/R/S/T/U/V/W/X/Y/Z/bracketleft/backslash/bracketright/circumflex
/underscore/quoteleft/a/b/c/d/e/f/g/h/i/j/k/l/m/n/o/p/q/r/s/t/u/v/w/x/y
/z/braceleft/bar/braceright/tilde/.notdef/quotesinglbase/guillemotleft
/guillemotright/bullet/florin/fraction/perthousand/dagger/daggerdbl
/endash/emdash/ff/fi/fl/ffi/ffl/dotlessi/dotlessj/grave/hungarumlaut
/dotaccent/breve/caron/ring/ogonek/quotedblleft/quotedblright/oe/lslash
/quotedblbase/OE/Lslash/.notdef/exclamdown/cent/sterling/currency/yen
/brokenbar/section/dieresis/copyright/ordfeminine/guilsinglleft
/logicalnot/minus/registered/macron/degree/plusminus/twosuperior
/threesuperior/acute/mu/paragraph/periodcentered/cedilla/onesuperior
/ordmasculine/guilsinglright/onequarter/onehalf/threequarters
/questiondown/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE
/Ccedilla/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex
/Idieresis/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis
/multiply/Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn
/germandbls/agrave/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla
/egrave/eacute/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis
/eth/ntilde/ograve/oacute/ocircumflex/otilde/odieresis/divide/oslash
/ugrave/uacute/ucircumflex/udieresis/yacute/thorn/ydieresis]def
/Courier-Oblique@0 ENC0/Courier-Oblique RE/Times-Bold@0 ENC0/Times-Bold
RE/Courier@0 ENC0/Courier RE/Times-Italic@0 ENC0/Times-Italic RE
/Helvetica@0 ENC0/Helvetica RE/Times-Roman@0 ENC0/Times-Roman RE
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
BP
%%EndPageSetup
/F0 24/Times-Roman@0 SF(An)108.588 103.007 Q/F1 24/Helvetica@0 SF
(occam-)6 E/F2 24/Symbol-Slanted SF(p)A F0(Checklist)6 E/F3 20
/Times-Roman@0 SF(\()6 E/F4 20/Helvetica@0 SF(occam2.1)A F3(subset\))5 E
/F5 12/Times-Italic@0 SF(Copyright \251 2006 P)149.666 131.007 Q(.H.W)
-1.62 E(elc)-1.104 E(h)-.18 E/F6 12/Courier@0 SF(<P.H.Welch@kent.ac.uk>)
3 E F5 -1.62(P.)109.868 145.007 S(H.W)1.62 E(elc)-1.104 E
(h, Computing Labor)-.18 E(atory)-.18 E 3(,U)-.66 G(niver)-3 E
(sity of K)-.12 E(ent at Canterb)-.42 E(ury)-.24 E 3(,C)-.66 G(T2 7NF)-3
E(.)-1.62 E/F7 12/Times-Bold@0 SF 3(1. Intr)79.2 180.807 R(oduction)
-.216 E 3(1.1. T)79.2 208.807 R(op-Do)-1.104 E(wn V)-.12 E(iew)-.444 E
/F8 12/Times-Roman@0 SF(An)79.2 226.407 Q F5(occam)3 E F8(program is a)3
E/F9 11/Courier-Oblique@0 SF(<process>)3 E F8(.)A(A)79.2 244.007 Q F9
(<process>)7.189 E F8 4.188(is a \(possibly null\) sequence of)7.189 F
F9(<declarations>)7.188 E F8(follo)7.188 E 4.188(wed by)-.3 F(an)10.188
E F9(<executable>)79.2 258.007 Q F8 6.775(.E)C(ach)-6.775 E F9
(<declaration>)3.775 E F8 .776
(starts on a separate line and at the same le)3.775 F -.18(ve)-.3 G
3.776(lo).18 G(f)-3.776 E 3.092(indentation. The)79.2 272.007 R F9
(<executable>)3.092 E F8 .092(also starts at this same le)3.092 F -.18
(ve)-.3 G 3.092(lo).18 G 3.091(fi)-3.092 G 3.091(ndentation. The)-3.091
F .091(scope of)3.091 F(an)79.2 286.007 Q(y)-.18 E F9(<declaration>)
4.448 E F8(co)4.448 E -.18(ve)-.18 G 1.448(rs only those).18 F F9
(<declarations>)4.448 E F8 1.449(and the)4.449 F F9(<executable>)4.449 E
F8(that)4.449 E(follo)79.2 300.007 Q 3(wi)-.3 G(t.)-3 E(An)79.2 317.607
Q F9(<executable>)3 E F8(is either a)3 E F9(<primitive.process>)3 E F8
(or a)3 E F9(<structured.process>)3 E F8(.)A F7 3(1.2. Bottom-Up)79.2
345.607 R -.444(Vi)3 G(ew).444 E F5(occam)79.2 363.207 Q F8(processes)
5.725 E/F10 11/Courier@0 SF(INT)5.725 E F8 5.725(s\()C 2.724
(16, 32 or 64 bits, depending on the w)-5.725 F 2.724
(ord-length of the tar)-.12 F(get)-.216 E(processor\),)79.2 377.207 Q
F10(INT16)3.433 E F8 3.433(s\()C .433(16 bits, re)-3.433 F -.06(ga)-.18
G .433(rdless of the w).06 F .434(ord-length of the tar)-.12 F .434
(get processor\),)-.216 F F10(INT32)3.434 E F8(s)A 1.595
(\(32 bits, also re)79.2 391.207 R -.06(ga)-.18 G 1.595(rdless ...\),)
.06 F F10(INT64)4.595 E F8 4.595(s\()C 1.595(64 bits, also re)-4.595 F
-.06(ga)-.18 G 1.594(rdless ...\),).06 F F10(BYTE)4.594 E F8 1.594
(s, \(8 bit unsigned)B .178(numbers \212 i.e. 0..255\),)79.2 405.207 R
F10(BOOL)3.178 E F8 3.178(sa)C .178
(nd ANSI/IEEE-754 standard \215oating-point numbers in tw)-3.178 F(o)
-.12 E .8(precisions \212)79.2 419.207 R F10(REAL32)3.8 E F8(and)3.8 E
F10(REAL64)3.8 E F8 6.799(.V)C .799(ariables, channels and e)-8.131 F
.799(xpressions are all typed and)-.18 F .841
(strong checking rules are enforced that do not allo)79.2 433.207 R
3.842(wi)-.3 G .842(nconsistent mix)-3.842 F 3.842(es. Character)-.18 F
(literals)3.842 E 1.862(\(in single quotes\) are treated as)79.2 447.207
R F10(BYTE)4.862 E F8 4.862(sa)C 1.862
(nd character strings \(in double quotes\) as \214x)-4.862 F(ed)-.18 E
(length)79.2 461.207 Q F10(BYTE)3 E F8 3(arrays. The)3 F(follo)3 E
(wing operators are de\214ned for e)-.3 E(xpressions:)-.18 E F10
(+, \255, *, /, \\)115.2 481.207 Q F8(\(operands)64.2 E F10(INT)3 E F9
(xx)A F8(or)3 E F10(BYTE)3 E F8 3(,r)C(esult)-3 E F10(INT)3 E F9(xx)A F8
(or)3 E F10(BYTE)3 E F8(\))A F10(PLUS, MINUS, TIMES)115.2 495.207 Q F8
(\(operands)31.2 E F10(INT)3 E F9(xx)A F8(or)3 E F10(BYTE)3 E F8 3(,r)C
(esult)-3 E F10(INT)3 E F9(xx)A F8(or)3 E F10(BYTE)3 E F8(\))A F10
(AFTER)115.2 509.207 Q F8(\(operands)117 E F10(INT)3 E F9(xx)A F8 3(,r)C
(esult)-3 E F10(BOOL)3 E F8(\))A F10(+, \255, *, /, \\)115.2 523.207 Q
F8(\(operands)64.2 E F10(REAL)3 E F9(xx)A F8 3(,r)C(esult)-3 E F10(REAL)
3 E F9(xx)A F8(\))A F10(<, <=, >, >=)115.2 537.207 Q F8(\(operands)70.8
E F10(INT)3 E F9(xx)A F8(,)A F10(REAL)3 E F9(xx)A F8(or)3 E F10(BYTE)3 E
F8 3(,r)C(esult)-3 E F10(BOOL)3 E F8(\))A F10(AND, OR, NOT)115.2 551.207
Q F8(\(operands)70.8 E F10(BOOL)3 E F8 3(,r)C(esult)-3 E F10(BOOL)3 E F8
(\))A F10(=, <>)115.2 565.207 Q F8(\(operands same type, result)117 E
F10(BOOL)3 E F8(\))A F10(/\\, \\/,)115.2 579.207 Q/F11 11/Symbol SF(~)
6.6 E F10 6.6(,>)C(<)-6.6 E F8(\(operands)64.761 E F10(INT)3 E F9(xx)A
F8(or)3 E F10(BYTE)3 E F8 3(,r)C(esult)-3 E F10(INT)3 E F9(xx)A F8(or)3
E F10(BYTE)3 E F8(\))A F10(<<, >>)115.2 593.207 Q F8(\(operands)110.4 E
F10(INT)3 E F9(xx)A F8(or)3 E F10(BYTE)3 E F8 3(,r)C(esult)-3 E F10(INT)
3 E F9(xx)A F8(or)3 E F10(BYTE)3 E F8(,)A
(where 0 <= right operand < 64\))268.2 607.207 Q F7 -.78(Wa)79.2 627.207
S -.18(rn).78 G(ing).18 E F8 4.549(:t)C 1.549
(here is no precedence ordering for operators nor an)-4.549 F 4.55(y`)
-.18 G 1.55(left-to-right' e)-4.55 F -.3(va)-.3 G(luation).3 E
(rule \212 use brack)79.2 641.207 Q(ets!)-.12 E F7(Note:)79.2 658.807 Q
F8 1.059(in\214x operators with)4.059 F F10(INT)4.058 E F9(xx)A F8(or)
4.058 E F10(REAL)4.058 E F9(xx)A F8 1.058(operands must ha)4.058 F 1.418
-.18(ve t)-.24 H 1.058(he same precision \(i.e.).18 F .671
(16, 32 or 64 bits\), as well as the same type, on each side.)79.2
672.807 R(The)6.672 E 3.672(yr)-.18 G .672(eturn v)-3.672 F .672
(alues of that same)-.3 F(precision and type.)79.2 686.807 Q F7(Note:)
79.2 704.407 Q F8 2.403(to con)5.403 F -.18(ve)-.48 G 2.402
(rt between types/precisions, just use the tar).18 F 2.402
(get type/precision name as a)-.216 F
(pre\214x operator on the source type/precision v)79.2 718.407 Q
(alue \212 see section 11.5.)-.3 E F7(Note:)79.2 736.007 Q F10(PLUS)3.41
E F8(,)A F10(MINUS)3.41 E F8(,)A F10(TIMES)3.41 E F8(and)3.41 E F10
(AFTER)3.41 E F8 .411(are best applied to time v)3.411 F .411
(alues \212 see sections 2.4,)-.3 F .726(3.4, 3.5 and 4.3.)79.2 750.007
R -.42(Ti)6.726 G .726(me c).42 F .726
(ycles through the complete range of)-.18 F F10(INT)3.726 E F8 3.726
(s. If)B(we)3.726 E F10(PLUS)3.726 E F8 .725(one to the)3.726 F
(most positi)79.2 764.007 Q -.18(ve)-.3 G F10(INT)3.18 E F8 3(,w)C 3(eg)
-3 G(et the most ne)-3 E -.06(ga)-.18 G(ti).06 E -.18(ve)-.3 G F10(INT)
3.18 E F8 3<8a6e>3 G(ot an o)-3 E -.18(ve)-.18 G(r\215o).18 E 3(we)-.3 G
(rror)-3 E(.)-.66 E 0 Cg EP
%%Page: 2 2
%%BeginPageSetup
BP
%%EndPageSetup
/F0 12/Times-Roman@0 SF(-2-)281.004 50 Q/F1 12/Times-Bold@0 SF 3
(2. Declarations)72 86 R 3(2.1. V)72 114 R(alue Ab)-1.104 E(br)-.12 E
-.18(ev)-.216 G(iation \(constants\)).18 E/F2 11/Courier@0 SF
(VAL INT max IS 50:)108 137.6 Q(VAL INT double.max IS 2*max:)108 151.6 Q
/F3 11/Symbol SF(--)415.2 E F2(constant "folding")6.6 E
(VAL BYTE first.letter IS)108 165.6 Q F3<a2>6.6 E F2(A)A F3<a2>A F2(:)A
F3(--)416.366 E F2(character literals are BYTEs)6.6 E
(VAL []BYTE hello IS "Hello World*c*n":)108 179.6 Q F3(--)349.2 E F2
(string literals are BYTE arrays)6.6 E(VAL INT control IS #1F:)108 193.6
Q F3(--)448.2 E F2 6.6(ah)6.6 G(exadecimal literal)-6.6 E
(VAL BYTE bell.char IS BYTE \(control /\\ \(INT)108 207.6 Q F3<a2>6.6 E
F2(G)A F3<a2>A F2(\)\):)A F3(--)277.766 E F2(note type conversions)6.6 E
(VAL [8]INT masks IS [#01, #02, #04, #08, #10, #20, #40, #80]:)108 221.6
Q F3(--)197.4 E F2(the 8 was optional)6.6 E F1(Note:)72 245.2 Q F0 1.176
(these are a special form of the more general)4.176 F/F4 12
/Times-Italic@0 SF(occam)4.176 E F0 1.177(concept of abbre)4.176 F 1.177
(viation \212 see)-.3 F(section 8.)72 259.2 Q F1 3(2.2. V)72 287.2 R
(ariable Declaration)-1.104 E F2(INT a, b:)108 310.8 Q([max]INT c:)108
324.8 Q([double.max][max]BYTE d:)108 338.8 Q F0 .633(The array)72 358.8
R F2(c)3.633 E F0(has)3.633 E F2(max)3.633 E F0 .633(elements inde)3.633
F -.18(xe)-.18 G(d).18 E F2(c[0])3.633 E F0(to)3.633 E F2(c[max\2551])
3.633 E F0(inclusi)3.633 E -.18(ve)-.3 G 6.633(.T).18 G .632
(he declared size of)-6.633 F .96(an array must be a constant.)72 372.8
R .96(The v)6.96 F(ariables)-.3 E F2(a)3.96 E F0(and)3.96 E F2(b)3.96 E
F0 .96(and elements of)3.96 F F2(c)3.961 E F0(are)3.961 E F2(INT)3.961 E
F0(quantities.)3.961 E 1.479(The array)72 386.8 R F2(d)4.479 E F0(has)
4.479 E F2(double.max)4.479 E F0 1.479(elements inde)4.479 F -.18(xe)
-.18 G(d).18 E F2(d[0])4.479 E F0(to)4.479 E F2(d[99])4.479 E F0 7.479
(.T)C 1.479(he elements of)-7.479 F F2(d)4.478 E F0(are)4.478 E F2
([max]BYTE)72 400.8 Q F0 3(arrays. The)3 F(byte)3 E F2(d[a][b])3 E F0
(is the)3 E F2(b)3 E F0(th. element of the)A F2(a)3 E F0(th. element of)
A F2(d)3 E F0(.)A F1 3(2.3. Channel)72 428.8 R(Declaration)3 E F2
(CHAN BYTE p:)108 448.8 Q([200]CHAN INT q:)108 462.8 Q F0(Here,)72 482.8
Q F2(p)3.915 E F0 .915(is a channel carrying)3.915 F F2(BYTE)3.916 E F0
-.3(va)3.916 G .916(lues and).3 F F2(q)3.916 E F0 .916
(is an array of 200)3.916 F F2(INT)3.916 E F0 .916(channels inde)3.916 F
-.18(xe)-.18 G(d).18 E F2(q[0])72 496.8 Q F0(to)3 E F2(q[199])3 E F0
(inclusi)3 E -.18(ve)-.3 G(.).18 E F1 3(2.4. T)72 524.8 R
(imer Declaration)-.216 E F2(TIMER tim:)108 548.4 Q F0 3.603 -.96(To a)
72 568.4 T 1.683(ccess the clock,).96 F F2(INT)4.683 E F0 -.3(va)4.683 G
1.683(lues need to be input from a).3 F F2(TIMER)4.682 E F0 1.682
(\(see Section 3.4\).)4.682 F(An)7.682 E(y)-.18 E 3.175(number of)72
582.4 R F2(TIMER)6.175 E F0 6.175(sm)C 3.175(ay be declared \212 the)
-6.175 F 6.175(ya)-.18 G 3.175(ll go at the same speed \(one tick per)
-6.175 F(microsecond is the def)72 596.4 Q(ault\), b)-.12 E(ut the)-.24
E 3(ya)-.18 G(re not obliged to sho)-3 E 3(wt)-.3 G(he same time.)-3 E
F1 3(2.5. Pr)72 624.4 R(ocess Abstraction)-.216 E F2
(PROC foo \(VAL []BYTE s, VAL BOOL mode, INT result,)108 648 Q
(CHAN INT in?, out!, CHAN BYTE pause?\))174 662 Q/F5 11
/Courier-Oblique@0 SF(<process>)121.2 676 Q F2(:)108 690 Q(VAL)72 710 Q
F5 -3.56(<type> <formal>)3.04 F F0 .04(parameters are similar to v)3.04
F .04(alue parameters in)-.3 F F4 -.96(Pa)3.04 G(scal).96 E F0 3.04
<8a65>3.04 G .04(xcept that)-3.22 F(the)72 724 Q 3.436(ya)-.18 G .436
(re treated as constants within the)-3.436 F F5(<process>)3.437 E F0
.437(body and may not be altered.)3.437 F F5(<type>)6.437 E(<formal>)72
738 Q F0(parameters are similar to reference \(i.e.)3 E F2(var)3 E F0 3
(\)p)C(arameters in)-3 E F4 -.96(Pa)3 G(scal).96 E F0(.)A 0 Cg EP
%%Page: 3 3
%%BeginPageSetup
BP
%%EndPageSetup
/F0 12/Times-Roman@0 SF(-3-)281.004 50 Q/F1 12/Times-Bold@0 SF(Note:)72
86 Q/F2 12/Times-Italic@0 SF(occam)8.392 E F0 5.392
(parameter mechanisms are formally de\214ned in terms of the)8.392 F F2
(occam)8.391 E F0(abbre)72 100 Q 1.38(viation concept \212 section 8.)
-.3 F 1.381(Aliasing of item names cannot be introduced through)7.38 F
(parameters \(as can happen in)72 114 Q F2 -.42(Ja)3 G(va).42 E F0(,)A
F2 -.96(Pa)3 G(scal).96 E F0(,)A F2(C)3 E F0(,)A F2(FORTRAN)3 E F0(,)A
F2(Ada)3 E F0(,)A F2(Modula-2)3 E F0 3(,.)C(..\).)-3 E(The)72 131.6 Q/F3
11/Courier-Oblique@0 SF(<process>)3.643 E F0 .643(body of the)3.643 F/F4
11/Courier@0 SF(PROC)3.642 E F0 .642(is as de\214ned in section 1.1 abo)
3.642 F 1.002 -.18(ve \212 i)-.18 H .642(.e. it can ha).18 F 1.002 -.18
(ve i)-.24 H(ts).18 E -.3(ow)72 145.6 S 3.718(n\().3 G(pri)-3.718 E -.3
(va)-.3 G .718(te\) declarations.).3 F .718(This body must be indented)
6.718 F F2 -.24(ex)3.719 G .719(actly two spaces).24 F F0 .719(from the)
3.719 F F4(PROC)3.719 E F0 3.446(line. Global)72 159.6 R .445
(names may be accessed directly from the body \212 b)3.445 F .445
(ut please, of course, a)-.24 F -.24(vo)-.24 G(id).24 E 1.507(global v)
72 173.6 R 1.507(ariables and channels.)-.3 F -.18(Pa)7.507 G 1.507
(rameter channels must be used e).18 F(xclusi)-.18 E -.18(ve)-.3 G 1.508
(ly for input or).18 F -.18(ex)72 187.6 S(clusi).18 E -.18(ve)-.3 G .252
(ly for output within the body \(their direction is de\214ned by the).18
F F4(?)3.252 E F0(or)3.252 E F4(!)3.252 E F0 .252(symbol after)6.252 F
.598(their name in the parameter list\).)72 201.6 R(In)6.598 E F4(foo)
3.598 E F0 3.598(,t)C .598(he parameter)-3.598 F F4(s)3.598 E F0 .598
(may be passed either an a)3.598 F F4(BYTE)3.599 E F0(array)72 215.6 Q
F2 -.444(re)3.337 G(fer).444 E(ence)-.444 E F0(\(lik)3.337 E(e)-.12 E F4
(d[a])3.337 E F0 3.337(\)o)C 3.336(ra)-3.337 G F4(BYTE)A F0(array)3.336
E F2(value)3.336 E F0(\(lik)3.336 E(e)-.12 E F4(hello)3.336 E F0 .336
(\); its parameter)B F4(result)3.336 E F0(may)3.336 E .231
(only be passed an)72 229.6 R F4(INT)3.231 E F2 -.444(re)3.231 G(fer)
.444 E(ence)-.444 E F0(\(lik)3.231 E 3.231(et)-.12 G .231(he v)-3.231 F
(ariable)-.3 E F4(a)3.231 E F0 3.231(,i)C 3.231(nw)-3.231 G .232
(hich the result of an)-3.231 F 3.232(ya)-.18 G(ssignments)-3.232 E .454
(made by)72 243.6 R F4(foo)3.453 E F0(to)3.453 E F4(result)3.453 E F0
.453(will be left\).)3.453 F F4(PROC)6.453 E F0 3.453(sm)C .453
(ay be used to create autonomous processes)-3.453 F
(\(running in parallel with each other\))72 257.6 Q F2(or)3 E F0
(for traditional procedure calls.)3 E F1 3(3. Primiti)72 285.6 R .24
-.12(ve P)-.12 H -.216(ro).12 G(cesses).216 E 3(3.1. Assignment)72 313.6
R(Pr)3 E(ocess)-.216 E F4 6.6(a:)108 337.2 S 6.6(=c)-6.6 G([2] + b)-6.6
E F2(occam)72 360.8 Q F0 -.18(ex)3.894 G .894(pressions ha).18 F 1.254
-.18(ve n)-.24 H 3.894(os).18 G(ide-ef)-3.894 E 3.894(fects! Because)-.3
F .894(of the anti-aliasing la)3.894 F .895(ws \(see section 8\),)-.18 F
(dif)72 374.8 Q 1.855(ferent names in the same scoping conte)-.3 F 1.855
(xt al)-.18 F -.12(wa)-.12 G 1.855(ys refer to dif).12 F 1.855
(ferent items \212 no nasty)-.3 F 4.492(surprises! This)72 388.8 R(gi)
4.492 E -.18(ve)-.3 G 4.492(su).18 G(s)-4.492 E F2 -.444(re)4.492 G(fer)
.444 E 1.492(ential tr)-.444 F(anspar)-.18 E(ency)-.444 E F0 4.492(,ap)C
1.492(osh name for)-4.492 F F2(what-you-see-is-what-)4.492 E(you-g)72
402.8 Q(et)-.12 E F0 8.381(.S)C 2.381(uch good beha)-8.381 F 2.381
(viour is not displayed by)-.24 F F2(any)5.381 E F0 2.381
(of the traditional languages for)5.381 F .97(procedural programming \()
72 416.8 R F2 -.42(Ja)C(va).42 E F0(,)A F2 -.96(Pa)3.97 G(scal).96 E F0
(,)A F2(C)3.97 E F0(,)A F2(FORTRAN)3.97 E F0(,)A F2(Ada)3.97 E F0(,)A F2
(Modula-2)3.97 E F0 3.97(,.)C 3.971(..\) and)-3.97 F .971(is a major)
3.971 F(cause of hard-to-\214nd and serious error)72 430.8 Q(.)-.66 E F1
3(3.2. Input)72 458.8 R(Pr)3 E(ocess)-.216 E F4(in ? a)108 482.4 Q F0
.081(This process is suspended until a message arri)72 502.4 R -.18(ve)
-.3 G 3.08(so).18 G 3.08(nc)-3.08 G(hannel)-3.08 E F4(in)3.08 E F0 6.08
(.I)C 3.08(tt)-6.08 G .08(hen inputs the contents)-3.08 F(into the v)72
516.4 Q(ariable)-.3 E F4(a)3 E F0
(\(whose type, of course, must match that of the channel\).)3 E F1 3
(3.3. Output)72 544.4 R(Pr)3 E(ocess)-.216 E F4(out ! a + \(2 * b\))108
568 Q F0 1.734(The e)72 588 R 1.734(xpression is e)-.18 F -.3(va)-.3 G
1.735(luated and output do).3 F 1.735(wn channel)-.3 F F4(out)4.735 E F0
1.735(\(whose type, of course, must)4.735 F .271(match that of the e)72
602 R 3.27(xpression\). This)-.18 F .27
(process is then suspended until the message is accepted)3.27 F
(by the recei)72 616 Q
(ving process \(at the other end of the channel\).)-.3 E(Ev)72 633.6 Q
1.05(ery communication between parallel processes uses this synchronisa\
tion mechanism \212)-.18 F(sometimes called a `rendezv)72 647.6 Q(ous'.)
-.24 E F1 3(3.4. T)72 675.6 R(imer Pr)-.216 E(ocess)-.216 E F4(tim ? t)
108 699.2 Q F0 1.396(The result of this process is that the v)72 719.2 R
1.396(alue of the timer)-.3 F F4(tim)4.395 E F0 1.395
(is assigned to the v)4.395 F(ariable)-.3 E F4(t)4.395 E F0
(\(which must be an)72 733.2 Q F4(INT)3 E F0(\).)A 3.587
(Although the syntax for reading them is similar)72 750.8 R 6.587(,t)
-.48 G 3.588(imers are dif)-6.587 F 3.588(ferent from channels.)-.3 F
.397(Channel input is)72 764.8 R F2(sync)3.397 E(hr)-.18 E(onised)-.54 E
F0 3.396<8a77>3.397 G 3.396(eh)-3.396 G -2.7 -.24(av e)-3.396 H .396
(to w)3.636 F .396(ait for the message to arri)-.12 F -.18(ve)-.3 G
6.396(!D).18 G .396(ata must not)-6.396 F
(get lost during channel communication!!)72 778.8 Q 0 Cg EP
%%Page: 4 4
%%BeginPageSetup
BP
%%EndPageSetup
/F0 12/Times-Roman@0 SF(-4-)281.004 50 Q 1.966
(On the other hand, timers beha)72 86 R 2.326 -.18(ve l)-.24 H(ik).18 E
(e)-.12 E/F1 12/Times-Italic@0 SF(un-sync)4.966 E(hr)-.18 E(onised)-.54
E F0 1.967(`channels' \212 when we read the)4.967 F 1.455
(time, we just w)72 100 R 1.455(ant the latest v)-.12 F 4.455(alue. W)
-.3 F 4.455(ed)-.96 G(on')-4.455 E 4.455(tw)-.216 G 1.455(ant to ha)
-4.575 F 1.815 -.18(ve t)-.24 H 4.455(ow).18 G 1.455
(ait for the clock to tick!)-4.575 F 1.803
(Data gets lost \212 all those time-v)72 114 R 1.804(alues we didn')-.3
F 4.804(tr)-.216 G 1.804(ead \212 b)-4.804 F 1.804(ut that')-.24 F 4.804
(sO)-.66 G 4.804(Kf)-4.804 G 1.804(or this kind of)-4.804 F(de)72 128 Q
3(vice. W)-.3 F 3(ed)-.96 G(on')-3 E 3(tw)-.216 G
(ant the clock to stop just because we don')-3.12 E 3(tl)-.216 G
(ook at it!!)-3 E/F2 12/Times-Bold@0 SF 3(3.5. T)72 156 R(imeout Pr)
-.216 E(ocess)-.216 E/F3 11/Courier@0 SF(tim ? AFTER t)108 179.6 Q F0
.016(This process is suspended until the v)72 199.6 R .016(alue on the)
-.3 F F3(tim)3.016 E F0 .015(timer \(al)3.016 F -.12(wa)-.12 G .015
(ys a).12 F -.3(va)-.24 G .015(ilable and increasing\)).3 F(gets)72
213.6 Q F3(AFTER)3.44 E F0 .44(the v)3.44 F .44(alue of)-.3 F F3(t)3.44
E F0 6.44(.N)C .44(ote that)-6.44 F F3(t)3.44 E F0 .44(may be an)3.44 F
(y)-.18 E F3(INT)3.44 E F0 -.18(ex)3.44 G .44(pression, b).18 F .441
(ut don')-.24 F 3.441(tf)-.216 G(or)-3.441 E .441(get to use)-.216 F F3
(PLUS)72 227.6 Q F0(and)3 E F3(MINUS)3 E F0(when w)3 E
(orking with time v)-.12 E(alues \(rather than)-.3 E F3(+)3 E F0(and)3 E
F3<ad>3 E F0(\).)A F2 3(3.6. Null)72 255.6 R(Pr)3 E(ocess)-.216 E F3
(SKIP)108 279.2 Q F0 .662(This process immediately terminates.)72 299.2
R(It')6.662 E 3.662(sn)-.66 G .661
(eeded because sometimes the syntax requires a)-3.662 F
(process and we ha)72 313.2 Q .36 -.18(ve n)-.24 H(othing to do.).18 E
(Of course, this process generates no object code!)6 E F2 3
(3.7. Suspend)72 341.2 R(Pr)3 E(ocess)-.216 E F3(STOP)108 364.8 Q F0
1.842(This process is suspended and ne)72 384.8 R -.18(ve)-.3 G 4.842
(rr).18 G 1.843(esumed \212 needed for semantic completeness and)-4.842
F(panic situations.)72 398.8 Q F2 3(4. Structur)72 426.8 R(ed Pr)-.216 E
(ocesses)-.216 E 3(4.1. Sequential)72 454.8 R(Pr)3 E(ocesses)-.216 E F3
(SEQ)108 478.4 Q/F4 11/Courier-Oblique@0 SF(<process.0>)121.2 492.4 Q
(<process.1>)121.2 506.4 Q(<process.2>)121.2 520.4 Q F0(The)72 540.4 Q
F4(<processes>)3.409 E F0 .408(are as described in 1.1 \(i.e. may ha)
3.409 F .768 -.18(ve p)-.24 H(ri).18 E -.3(va)-.3 G .408
(te declarations\) and must be).3 F .256(indented e)72 554.4 R .256
(xactly tw)-.18 F 3.256(os)-.12 G .256(paces further than the)-3.256 F
F3(SEQ)3.257 E F0 -.12(ke)3.257 G(yw)-.06 E 3.257(ord. The)-.12 F -.18
(ex)3.257 G .257(tent of the).18 F F3(SEQ)3.257 E F0(construct)3.257 E
(is \214nished when the indentation le)72 568.4 Q -.18(ve)-.3 G 3(lr).18
G(eturns to the same as \(or less than\) that of the)-3 E F3(SEQ)3 E F0
(.)A 2.745(The construct means that)72 586 R F4(<process.0>)5.745 E F0
(,)A F4(<process.1>)5.745 E F0(and)5.745 E F4(<process.2>)5.745 E F0
2.744(are to be)5.745 F -.18(exe)72 600 S .69(cuted in that order).18 F
6.69(.A)-.66 G 1.05 -.18(ny c)-6.69 H .69(hannel used within a).18 F F3
(SEQ)3.69 E F0 .691(construct must be used e)3.69 F(xclusi)-.18 E -.18
(ve)-.3 G(ly).18 E(for input or e)72 614 Q(xclusi)-.18 E -.18(ve)-.3 G
(ly for output.).18 E F2 3(4.2. P)72 642 R(arallel Pr)-.12 E(ocesses)
-.216 E F3(PAR)108 665.6 Q F4(<process.0>)121.2 679.6 Q(<process.1>)
121.2 693.6 Q(<process.2>)121.2 707.6 Q F0 2.788(The indentation and e)
72 727.6 R 2.788(xtent rules are as for the)-.18 F F3(SEQ)5.788 E F0
(abo)5.788 E -.18(ve)-.18 G 8.787(.T).18 G 2.787
(he construct means that)-8.787 F F4(<process.0>)72 741.6 Q F0(,)A F4
(<process.1>)5.381 E F0(and)5.381 E F4(<process.2>)5.381 E F0 2.381
(are to be e)5.381 F -.18(xe)-.18 G 2.381(cuted in parallel.).18 F(This)
8.382 E .946
(construct does not terminate until all its component processes ha)72
755.6 R 1.306 -.18(ve t)-.24 H 3.946(erminated. The).18 F(order)3.946 E
(in which the)72 769.6 Q F4(<processes>)3 E F0(are listed is irrele)3 E
-.3(va)-.3 G(nt.).3 E 0 Cg EP
%%Page: 5 5
%%BeginPageSetup
BP
%%EndPageSetup
/F0 12/Times-Roman@0 SF(-5-)281.004 50 Q -.18(Pa)72 86 S .058
(rallel processes may not assign or input to shared data \(b).18 F .059
(ut the)-.24 F 3.059(ym)-.18 G .059(ay inspect shared data\).)-3.059 F
-.18(Pa)72 100 S 1.276(rallel processes may not share input channels.)
.18 F -.18(Pa)7.275 G 1.275(rallel processes may not share output).18 F
3.854(channels. The)72 114 R(ef)3.854 E .854(fect of these rules is tha\
t parallel processes can only in\215uence each other)-.3 F 1.094
(by communicating along dedicated point-to-point channels.)72 128 R
1.093(So long as there are no)7.093 F/F1 11/Courier@0 SF(ALT)4.093 E F0
(s)A 1.165(\(see section 4.3\) present, their semantics \212 i.e. the s\
ervices the)72 142 R 4.165(yp)-.18 G(ro)-4.165 E 1.166
(vide to, and demand)-.18 F 1.1(from, their en)72 156 R 1.1
(vironment \212 are completely deterministic, re)-.48 F -.06(ga)-.18 G
1.099(rdless of internal scheduling).06 F(patterns or relati)72 170 Q
.36 -.18(ve p)-.3 H
(rocessor speed \(when running on multiple processors\).).18 E/F2 12
/Times-Bold@0 SF 3(4.3. Non-Deterministic)72 198 R(Pr)3 E(ocess)-.216 E
F1(ALT)108 221.6 Q/F3 11/Courier-Oblique@0 SF(<guard.0>)121.2 235.6 Q
(<process.0>)134.4 249.6 Q(<guard.1>)121.2 263.6 Q(<process.1>)134.4
277.6 Q(<guard.2>)121.2 291.6 Q(<process.2>)134.4 305.6 Q F0(Each)72
325.6 Q F3(<guard>)3.752 E F0 .752(is indented tw)3.752 F 3.752(os)-.12
G .753(paces and its associated)-3.752 F F3(<process>)3.753 E F0 .753
(is indented a further)3.753 F(tw)72 339.6 Q 3.114(os)-.12 G 3.113
(paces. W)-3.114 F 3.113(es)-.96 G .113(hall refer to such a pair as a)
-3.113 F F3(<guarded.process>)3.113 E F0 6.113(.T)C(he)-6.113 E F1(ALT)
3.113 E F0 .113(construct is)3.113 F 1.366
(suspended until one or more of the)72 353.6 R F3(<guards>)4.367 E F0
1.367(becomes `ready' \(see belo)4.367 F 4.367(w\). One)-.3 F 1.367
(of the)4.367 F(`ready')72 367.6 Q F3(<guards>)7.698 E F0(\(chosen)7.698
E/F4 12/Times-Italic@0 SF(arbitr)7.697 E(arily)-.18 E F0 7.697(\)i)C
7.697(st)-7.697 G 4.697(hen e)-7.697 F -.18(xe)-.18 G 4.697(cuted follo)
.18 F 4.697(wed by its associated)-.3 F F3(<process>)72 381.6 Q F0 6(.T)
C(he order in which these)-6 E F3(<guarded.processes>)3 E F0
(are listed is irrele)3 E -.3(va)-.3 G(nt.).3 E(A)72 399.2 Q F3(<guard>)
3 E F0(is either a)3 E F3(<simple.guard>)3 E F0(or a)3 E F3
(<pre.conditioned.guard>)3 E F0(.)A(A)72 416.8 Q F3(<simple.guard>)3 E
F0(is most commonly an)3 E F3(<input.guard>)3 E F0(:)A F1(in ? x)114
436.8 Q F0 .706
(This becomes `ready' if a message is pending on the channel.)72 456.8 R
.706(Its e)6.706 F -.18(xe)-.18 G .706(cution is to input the).18 F
(message.)72 470.8 Q(Alternati)72 488.4 Q -.18(ve)-.3 G(ly).18 E 3(,a)
-.78 G F3(<simple.guard>)A F0(may be a)3 E F3(<time.out.guard>)3 E F0(:)
A F1(tim ? AFTER absolute.time.out)114 508.4 Q F0 .405
(This becomes `ready' when the v)72 528.4 R .405(alue from the)-.3 F F1
(tim)3.405 E F0 .404(timer \(al)3.404 F -.12(wa)-.12 G .404(ys a).12 F
-.3(va)-.24 G .404(ilable and increasing\)).3 F(becomes)72 542.4 Q F1
(AFTER)3 E F0(the)3 E F1(absolute.time.out)3 E F0 -.3(va)3 G 3(lue. Its)
.3 F -.18(exe)3 G(cution is null.).18 E(Thirdly)72 560 Q 3(,a)-.78 G F3
(<simple.guard>)A F0(may be a)3 E F3(<null.guard>)3 E F0(:)A F1(SKIP)114
580 Q F0(This is al)72 600 Q -.12(wa)-.12 G(ys `ready' and has a null e)
.12 E -.18(xe)-.18 G(cution.).18 E(Finally)72 617.6 Q 3(,a)-.78 G F3
(<pre.conditioned.guard>)A F0(has the form:)3 E F3(<pre.condition>)114
637.6 Q F1(&)6.6 E F3(<simple.guard>)6.6 E F0 3.086(where the)72 657.6 R
F3(<pre.condition>)6.086 E F0 3.087(is an)6.087 F(y)-.18 E F1(BOOL)6.087
E F0 -.18(ex)6.087 G 6.087(pression. If).18 F(the)6.087 E F3
(<pre.condition>)6.087 E F0(is)6.087 E F1(FALSE)72 671.6 Q F0 6.712(,t)C
(he)-6.712 E F3(<simple.guard>)6.712 E F0 3.712(and its associated)6.712
F F3(<process>)6.712 E F0 3.712(are not candidates for)6.712 F -.18(exe)
72 685.6 S 1.478(cution \212 e).18 F -.18(ve)-.3 G 4.478(ni).18 G 4.478
(ft)-4.478 G(he)-4.478 E F3(<simple.guard>)4.478 E F0 1.478
(becomes `ready'.)4.478 F 1.479(\(Note that, because of the)7.478 F
9.445(rules forbidding shared data between parallel processes, the v)72
699.6 R 9.444(alue of an)-.3 F(y)-.18 E F3(<pre.condition>)72 713.6 Q F0
(cannot alter whilst a)3 E -.12(wa)-.18 G(iting a).12 E F3
(<simple.guard>)3 E F0(.\))A F2(Note:)72 731.2 Q F4 -.24(ex)3.443 G .443
(cept within).24 F F0(a)3.443 E F1 -3.157(PRI ALT)3.443 F F0 .443
(\(section 6\),)3.443 F F1(SKIP)3.443 E F0 .444
(guards are compelled \(by language rules\))3.444 F(to ha)72 745.2 Q .36
-.18(ve a p)-.24 H(re-condition dependent on run-time v).18 E
(alues \212 the)-.3 E 3(ym)-.18 G(ak)-3 E 3(en)-.12 G 3(os)-3 G
(ense otherwise.)-3 E 0 Cg EP
%%Page: 6 6
%%BeginPageSetup
BP
%%EndPageSetup
/F0 12/Times-Roman@0 SF(-6-)281.004 50 Q/F1 12/Times-Bold@0 SF 3
(4.4. Sequential)72 86 R(Choice)3 E/F2 11/Courier@0 SF(IF)108 109.6 Q/F3
11/Courier-Oblique@0 SF(<condition.0>)121.2 123.6 Q(<process.0>)134.4
137.6 Q(<condition.1>)121.2 151.6 Q(<process.1>)134.4 165.6 Q
(<condition.2>)121.2 179.6 Q(<process.2>)134.4 193.6 Q F0 1.543
(The indentation and e)72 213.6 R 1.542(xtent rules are as for the)-.18
F F2(ALT)4.542 E F0 1.542(construct abo)4.542 F -.18(ve)-.18 G 7.542(.W)
.18 G 4.542(es)-8.502 G 1.542(hall refer to a)-4.542 F F3(<condition>)72
227.6 Q F0 3.369(and its associated)6.369 F F3(<process>)6.369 E F0 3.37
(as a)6.37 F F3(<conditional.process>)6.37 E F0 9.37(.T)C(his)-9.37 E
(corresponds to a traditional:)72 241.6 Q F2(if \()108 261.6 Q F3
(<condition.0>)A F2 6.6(\){)C F3(<process.0>)-6.6 E F2 6.6(}e)C(lse)-6.6
E(if \()108 275.6 Q F3(<condition.1>)A F2 6.6(\){)C F3(<process.1>)-6.6
E F2 6.6(}e)C(lse)-6.6 E(if \()108 289.6 Q F3(<condition.2>)A F2 6.6
(\){)C F3(<process.2>)-6.6 E F2 6.6(}e)C(lse)-6.6 E(STOP)108 303.6 Q F0
(of, say)72 323.6 Q(,)-.78 E/F4 12/Times-Italic@0 SF -.42(Ja)3 G(va).42
E F0(or)3 E F4(C)3 E F0 6(.N)C(ote the)-6 E F2(STOP)3 E F0(if no)3 E F3
(<condition>)3 E F0(holds!)3 E F1 3(4.5. Sequential)72 351.6 R(Loop)3 E
F2(WHILE)108 375.2 Q F3(<condition>)6.6 E(<process>)121.2 389.2 Q F0
.745(This is just lik)72 409.2 R 3.745(ea)-.12 G .744(while-loop in)
-.001 F F4 -.42(Ja)3.744 G(va).42 E F0 6.744(.T)C(he)-6.744 E F3
(<process>)3.744 E F0 .744(must be indented tw)3.744 F 3.744(os)-.12 G
.744(paces from)-3.744 F(the)72 423.2 Q F2(WHILE)3 E F0 6(.T)C
(he body of the loop is de\214ned by the indentation.)-6 E .266
(There are no)72 440.8 R F2(GOTO)3.267 E F0 3.267(si)C(n)-3.267 E F4
(occam)3.267 E F0 .267(nor an)3.267 F 3.267(ya)-.18 G .267
(bnormal loop breaking mechanisms \(such as)-3.267 F F2(break)3.267 E F0
(or)72 454.8 Q F2(return)3.467 E F0 3.467(\). Thus,)B .467(we al)3.467 F
-.12(wa)-.12 G .466(ys kno).12 F 3.466(wt)-.3 G .466
(hat, when the loop does terminate, the)-3.466 F F3(<condition>)A F0
(must be)72 468.8 Q F2(FALSE)3 E F0 6(.T)C(his is not the case for)-6 E
F4 -.42(Ja)3 G(va).42 E F0(,)A F4 -.96(Pa)3 G(scal).96 E F0(,)A F4(C)3 E
F0(,)A F4(FORTRAN)3 E F0(,)A F4(Ada)3 E F0(,)A F4(Modula-2)3 E F0 3(,.)C
(..)-3 E F1 3(4.6. Pr)72 496.8 R(ocess Instantiation)-.216 E F2
(foo \(hello, FALSE, a, q[0]?, q[199]!, p?\))108 520.4 Q F0 2.039
(This is lik)72 540.4 R 5.039(ea)-.12 G(n)-5.039 E F4(own-class)5.039 E
F0 2.039(method in)5.039 F -.24(vo)-.48 G 2.039(cation in).24 F F4 -.42
(Ja)5.039 G(va).42 E F0 8.04(.V)C 2.04(alue parameters must be passed)
-9.372 F F4 -.24(ex)72 554.4 S(pr).24 E(essions)-.444 E F0 2.417
(of the correct type.)5.417 F 2.416(Reference parameters must be passed)
8.416 F F4(variables)5.416 E F0 2.416(of the)5.416 F .229(correct type.)
72 568.4 R .23
(Channel parameters must be passed the correct ends of channels \()6.229
F F2(?)A F0(or)3.23 E F2(!)3.23 E F0 3.23(\)w)C(ith)-3.23 E
(the correct protocol \(section 7\).)72 582.4 Q 1.92 -.96(We m)6 H
(ay also ha).96 E .36 -.18(ve t)-.24 H
(imer and port \(section 10\) parameters.).18 E F1 3(5. Replicated)72
610.4 R(Pr)3 E(ocesses)-.216 E F0(The)72 628 Q F2(SEQ)3.138 E F0(,)A F2
(PAR)3.138 E F0(,)A F2(ALT)3.138 E F0 3.138(,a)C(nd)-3.138 E F2(IF)3.138
E F0 .138(constructs may be replicated.)3.138 F(Suppose)6.137 E F3(XXX)
3.137 E F0 .137(is one of these four)3.137 F -.12(ke)72 642 S(yw)-.06 E
3(ords. Then:)-.12 F F3(XXX)108 662 Q F2 6.6(i=s)6.6 G(tart FOR n)-6.6 E
F3(<thing.which.may.use.i>)121.2 676 Q F0(is short-hand for:)72 696 Q F3
(XXX)108 716 Q(<thing.with.i.replaced.by.start>)121.2 730 Q
(<thing.with.i.replaced.by.\(start + 1\)>)121.2 744 Q(...)121.2 758 Q
(<thing.with.i.replaced.by.\(start + \(n \255 1\)\)>)121.2 772 Q 0 Cg EP
%%Page: 7 7
%%BeginPageSetup
BP
%%EndPageSetup
/F0 12/Times-Roman@0 SF(-7-)281.004 50 Q -.18(Fo)72 86 S(r).18 E/F1 11
/Courier@0 SF(SEQ)4.715 E F0(and)4.715 E F1(PAR)4.715 E F0 4.715(,t)C
(he)-4.715 E/F2 11/Courier-Oblique@0 SF(<thing.which.may.use.i>)4.715 E
F0 1.715(is a)4.715 F F2(<process>)4.715 E F0 7.716(.F)C(or)-7.896 E F1
(ALT)4.716 E F0 4.716(,i)C 4.716(ti)-4.716 G 4.716(sa)-4.716 G F2
(<guarded.process>)72 100 Q F0 6.12(.F)C(or)-6.3 E F1(IF)3.119 E F0
3.119(,i)C 3.119(ti)-3.119 G 3.119(sa)-3.119 G F2(<conditional.process>)
A F0 6.119(.T)C .119(he replicator control)-6.119 F -.3(va)72 114 S
(lue,).3 E F1(i)3.672 E F0 3.672(,i)C 3.673(sa)-3.672 G(n)-3.673 E F1
(INT)3.673 E F0 .673(declared by this construct.)3.673 F .673
(It has scope for)6.673 F 3.673(,a)-.48 G .673(nd may not be altered by)
-3.673 F(,)-.78 E(the)72 128 Q F2(<thing.which.may.use.i>)3.984 E F0
6.984(.F)C .983(or a replicated)-7.164 F F1(PAR)3.983 E F0 3.983(,t)C
.983(he replication f)-3.983 F(actor)-.12 E(,)-.48 E F1(n)3.983 E F0
3.983(,s)C(hould)-3.983 E 1.052(preferably be a constant.)72 142 R(Ho)
7.052 E(we)-.3 E -.18(ve)-.3 G -.48(r,).18 G/F3 12/Helvetica@0 SF
(occam-)4.532 E/F4 12/Symbol-Slanted SF(p)A F0(allo)4.052 E 1.053
(ws this to be run-time de\214ned, although)-.3 F
(that does reduce \(currently\) some of the compile-time safety checks.)
72 156 Q .522(The replicated)72 173.6 R F1(SEQ)3.522 E F0 .522
(corresponds to a traditional)3.522 F F1(for)3.522 E F0 3.522
(-loop. The)B(replicated)3.522 E F1(IF)3.522 E F0 .521(is an ef)3.522 F
(\214cient)-.3 E .834(construct for performing a bounded length search.)
72 187.6 R(The)6.835 E F2(<conditional.process>)3.835 E F0 .835(of an)
3.835 F F1(IF)72 201.6 Q F0 .506(construct can itself be an)3.506 F F1
(IF)3.505 E F0 3.505(construct. The)3.505 F F2(<conditional.processes>)
3.505 E F0 .505(of an inner)3.505 F F1(IF)72 215.6 Q F0 1.642
(are treated as through the)4.642 F 4.642(yw)-.18 G 1.642
(ere at the same le)-4.642 F -.18(ve)-.3 G 4.642(la).18 G 4.642(st)
-4.642 G 1.642(hose of the outer)-4.642 F F1(IF)4.643 E F0 7.643(.T)C
1.643(hus, a)-7.643 F(search through the array)72 229.6 Q F1(c)3 E F0
(for a particular item, say)3 E F1(42)3 E F0 3(,m)C(ay be coded:)-3 E F1
(IF)108 249.6 Q(IF i = 0 FOR SIZE c)121.2 263.6 Q(c[i] = 42)134.4 277.6
Q(found.it, its.index := TRUE, i)147.6 291.6 Q(TRUE)121.2 305.6 Q
(found.it := FALSE)134.4 319.6 Q F0(where)72 339.6 Q F1 -1.679(SIZE c)
4.921 F F0 1.921(is the number of elements in)4.921 F F1(c)4.921 E F0
7.921(.T)C 1.921(his could be coded using a)-7.921 F F1(WHILE)4.921 E F0
(or)4.92 E(replicated)72 353.6 Q F1(SEQ)3 E F0(construct \212 b)3 E
(ut it w)-.24 E(ould be much less clear and ef)-.12 E(\214cient.)-.3 E
.224(Similarly to)72 371.2 R F1(IF)3.224 E F0 .224(constructs, the)3.224
F F2(<guarded.process>)3.224 E F0 .224(within an)3.224 F F1(ALT)3.224 E
F0 .225(construct can itself be)3.225 F(an)72 385.2 Q F1(ALT)3.328 E F0
.327(construct \212 the)3.327 F F2(<guarded.processes>)3.327 E F0 .327
(of the inner)3.327 F F1(ALT)3.327 E F0 .327(being treated as though)
3.327 F(the)72 399.2 Q 3.79(yw)-.18 G .79(ere at the same le)-3.79 F
-.18(ve)-.3 G 3.79(la).18 G 3.79(st)-3.79 G .79(hose of the outer)-3.79
F F1(ALT)3.79 E F0 6.79(.T)C .79(he use of replicated)-6.79 F F1(ALT)
3.791 E F0(and)3.791 E F1(PAR)3.791 E F0
(constructs has no analogy within traditional programming languages.)72
413.2 Q .414(The e)72 430.8 R(xpression)-.18 E F1 .414
([c FROM start FOR n])3.414 F F0 .414(represents a `slice' of the array)
3.414 F F1(c)3.414 E F0 .413(from element)3.413 F F1(c[start])72 444.8 Q
F0(to)3.244 E F1 .244(c[start + \(n \255 1\)])3.244 F F0(inclusi)3.245 E
-.18(ve)-.3 G(.).18 E F1 .245([c FOR n])6.245 F F0 .245
(represents a `slice' co)3.245 F -.18(ve)-.18 G(ring).18 E 1.638
(the \214rst)72 458.8 R F1(n)4.638 E F0(elements.)4.638 E F1 1.638
([c FROM start])7.638 F F0 1.637(represents a `slice' from element)4.637
F F1(start)4.637 E F0 1.637(to the)4.637 F 3.094(end. Array)72 472.8 R
.094(slices may be assigned to one another)3.094 F 3.095(,o)-.48 G 3.095
(ri)-3.095 G .095(nput or output through channels.)-3.095 F(The)6.095 E
1.017(sizes and types of slices on either side of the assignment or cha\
nnel must be equal.)72 486.8 R(Such)7.016 E 2.453
(operations are more ef)72 500.8 R 2.453
(\214cient than a single assignment, input or output controlled by a)-.3
F(corresponding replicated)72 514.8 Q F1(SEQ)3 E F0 6(.A)C
(rray parameters may also be passed array slices.)-6 E/F5 12
/Times-Bold@0 SF 3(6. Prioritised)72 542.8 R(Pr)3 E(ocesses)-.216 E F0
2.41 -.96(We m)72 560.4 T .49(ay write).96 F F1 -3.11(PRI ALT)3.49 F F0
.49(instead of)3.49 F F1(ALT)3.49 E F0 6.49(.T)C .49(he only dif)-6.49 F
.489(ference is that if more than one of the)-.3 F F2(<guards>)72 574.4
Q F0 .687(is `ready', the choice of which one to e)3.687 F -.18(xe)-.18
G .687(cute is not).18 F/F6 12/Times-Italic@0 SF(arbitr)3.687 E(ary)-.18
E F0 -.24(bu)3.687 G 3.687(ti).24 G 3.687(st)-3.687 G(he)-3.687 E F6
<8c72>3.687 E(st)-.12 E F0(in)3.688 E(the order listed.)72 588.4 Q 2.467
-.96(We m)72 606 T .547(ay write).96 F F1 -3.053(PRI PAR)3.547 F F0 .547
(instead of)3.547 F F1(PAR)3.547 E F0 6.547(.T)C .546
(his imposes a `priority' on the)-6.547 F F2(<processes>)3.546 E F0(to)
3.546 E 1.951(be run in parallel according to the order in which the)72
620 R F2(<processes>)4.951 E F0 1.952(are listed.)4.951 F(Lo)7.952 E
(wer)-.3 E(priority)72 634 Q F2(<processes>)3.458 E F0 .458(are ne)3.458
F -.18(ve)-.3 G 3.458(re).18 G -.18(xe)-3.638 G .458
(cuted if there is a higher priority one able to run.).18 F(The)6.457 E
.537(current transputer implementation restricts the number of componen\
ts of a)72 648 R F1 -3.062(PRI PAR)3.538 F F0 .538(to just)3.538 F(tw)72
662 Q 3(o\212`)-.12 G(high' priority and `lo)-3 E(w' priority)-.3 E(.)
-.78 E F5 3(7. Pr)72 693.6 R(otocols)-.216 E F0 .737
(All channel declarations state the message structure \(called the)72
711.2 R F1(PROTOCOL)3.736 E F0 3.736(\)c)C .736(arried by that)-3.736 F
4.457(channel. All)72 725.2 R 1.458(messages sent o)4.457 F -.18(ve)-.18
G 4.458(rac).18 G 1.458(hannel must conform to that protocol.)-4.458 F
1.458(All protocols)7.458 F .137(used so f)72 739.2 R .137(ar ha)-.12 F
.497 -.18(ve b)-.24 H .137(een `simple' ones \212 i.e.).18 F F6(occam)
3.136 E F0 3.136(data-types. Ho)3.136 F(we)-.3 E -.18(ve)-.3 G 1.096
-.48(r, w).18 H 3.136(ef).48 G .136(requently w)-3.136 F(ant)-.12 E
3.599(messages with richer structures \212 e.g.)72 753.2 R 6.599(am)
9.599 G 3.6(ixture of data-types, dif)-6.599 F 3.6(fering data-types)-.3
F .494(\(depending upon the run-time state\) or dif)72 767.2 R .493
(fering amounts of the same data-type \(depending)-.3 F
(upon the run-time state\).)72 781.2 Q 0 Cg EP
%%Page: 8 8
%%BeginPageSetup
BP
%%EndPageSetup
/F0 12/Times-Roman@0 SF(-8-)281.004 50 Q/F1 12/Times-Bold@0 SF 3
(7.1. Simple)72 86 R(Pr)3 E(otocols)-.216 E F0(An)72 103.6 Q(y)-.18 E/F2
12/Times-Italic@0 SF(occam)3 E F0
(data-type may be used for a channel protocol \212 e)3 E -.18(ve)-.3 G 3
(na).18 G(rrays:)-3 E/F3 11/Courier@0 SF(CHAN [max]REAL64 chunk:)108
123.6 Q F0(Suppose)72 143.6 Q F3(ping)3 E F0(is a)3 E F3([max]REAL64)3 E
F0(array)3 E 6(.T)-.78 G(hen:)-6 E F3(chunk ! ping)108 163.6 Q F0
(outputs all 50 elements of)72 183.6 Q F3(ping)3 E F0(do)3 E
(wn the channel)-.3 E F3(chunk)3 E F0 6(.A)C 3(tt)-6 G(he other end:)-3
E F3(chunk ? pong)108 203.6 Q F0(inputs all 50 elements into)72 223.6 Q
F3(pong)3 E F0(\(which must, of course, be a)3 E F3([max]REAL64)3 E F0
-.3(va)3 G(riable\).).3 E F1(Note:)72 241.2 Q F0 .455
(this single transfer of the whole array is much more ef)3.454 F .455
(\214cient \(in terms of code space)-.3 F 1.909(and e)72 255.2 R -.18
(xe)-.18 G 1.908(cution speed\) than the replicated transfer of its ele\
ments, one at a time, do).18 F 1.908(wn a)-.3 F F3(REAL64)72 269.2 Q F0
(channel.)3 E F1 3(7.2. Sequential)72 297.2 R(Pr)3 E(otocols)-.216 E F0
1.778(Suppose we need to send three v)72 314.8 R 1.778(alues of dif)-.3
F 1.778(fering types \212 say an inte)-.3 F(ger)-.18 E 4.779(,ar)-.48 G
1.779(eal and a)-4.779 F(boolean \212 from one process to another)72
328.8 Q 6(.F)-.66 G(irst, de\214ne a suitable message structure:)-6 E F3
(PROTOCOL PACKET IS INT; REAL64; BOOL:)108 348.8 Q F0(where)72 368.8 Q
F3(PACKET)3 E F0(is our o)3 E(wn choice of name.)-.3 E
(Then, we may declare:)6 E F3(CHAN PACKET carry:)108 388.8 Q F0 .841
(When the channel)72 408.8 R F3(carry)3.841 E F0 .84
(is used, we must output a message that matches the structure of)3.841 F
(the)72 422.8 Q F3(PACKET)3 E F0 3<8a66>3 G(or e)-3 E(xample:)-.18 E F3
(carry ! n; a*\(b + c\); flag)108 442.8 Q F0(where)72 462.8 Q F3(n)4.682
E F0 1.682(must be an)4.682 F F3(INT)4.682 E F0(,)A F3(a)4.683 E F0(,)A
F3(b)4.683 E F0(and)4.683 E F3(c)4.683 E F0 1.683(must be)4.683 F F3
(REAL64)4.683 E F0 4.683(sa)C(nd)-4.683 E F3(flag)4.683 E F0 1.683
(must be a)4.683 F F3(BOOL)4.683 E F0 7.683(.A)C(s)-7.683 E(al)72 476.8
Q -.12(wa)-.12 G .077(ys, this output process is suspended until the wh\
ole message has been input at the other).12 F(end of the channel.)72
490.8 Q(The recei)72 508.4 Q -.18(ve)-.3 G 3(rm).18 G(ust pro)-3 E
(vide v)-.18 E(ariables that also match the)-.3 E F3(PACKET)3 E F0
(protocol \212 for e)3 E(xample:)-.18 E F3(carry ? i; x; mode)108 528.4
Q F0(where)72 548.4 Q F3(i)3 E F0(must be an)3 E F3(INT)3 E F0(,)A F3(x)
3 E F0(must be a)3 E F3(REAL64)3 E F0(and)3 E F3(mode)3 E F0(must be a)3
E F3(BOOL)3 E F0(.)A .116(There is an analogy in the w)72 566 R .117
(ay that a sequential protocol packages messages to the w)-.12 F .117
(ay that)-.12 F 5.862(a`)72 580 S 2.862
(record' structure packages data-types.)-5.862 F(Ho)8.862 E(we)-.3 E
-.18(ve)-.3 G 3.822 -.48(r, i).18 H 5.862(ti).48 G 5.862(sal)-5.862 G
2.862(ittle bit dif)-5.862 F 2.861(ferent since the)-.3 F .516
(ordering of message \214elds is signi\214cant \212 the data is deli)72
594 R -.18(ve)-.3 G .517(red in the sequence de\214ned by).18 F 3.366
(the protocol declaration.)72 608 R 5.286 -.96(We m)9.366 H 3.366
(ay safely rely on this ordering, for e).96 F 3.365(xample, to send)-.18
F(information in the \214rst part of the message that de\214nes where l\
ater parts are to be stored:)72 622 Q F3(carry ? i; x[i]; mode[i])108
642 Q F0(where)72 662 Q F3(x)3 E F0(and)3 E F3(mode)3 E F0(must no)3 E 3
(wb)-.3 G 3(e\()-3 G(respecti)-3 E -.18(ve)-.3 G(ly\)).18 E F3(REAL64)3
E F0(and)3 E F3(BOOL)3 E F0(arrays.)3 E F1 3(7.3. V)72 690 R(ariant Pr)
-1.104 E(otocols)-.216 E F0 .975(If we w)72 707.6 R .975
(ant to send dif)-.12 F .976(ferent message structures at dif)-.3 F .976
(ferent times do)-.3 F .976(wn the same channel,)-.3 F 3.011(we use a v)
72 721.6 R 3.011(ariant \(or)-.3 F F3(CASE)6.011 E F0 6.011(\)p)C 6.011
(rotocol. In)-6.011 F 3.01(the protocol declaration, we list the v)6.011
F(arious)-.3 E .977(message structures we wish to send, each preceded b\
y a unique `tag' name of our choice.)72 735.6 R -.18(Fo)72 749.6 S 3(re)
.18 G(xample:)-3.18 E 0 Cg EP
%%Page: 9 9
%%BeginPageSetup
BP
%%EndPageSetup
/F0 12/Times-Roman@0 SF(-9-)281.004 50 Q/F1 11/Courier@0 SF
(PROTOCOL SERVICE)108 86 Q(CASE)121.2 100 Q(enquire; INT)134.4 114 Q
(update; INT; REAL32)134.4 128 Q(reset)134.4 142 Q(terminate)134.4 156 Q
(:)108 170 Q F0 1.284(The tags)72 190 R F1(enquire)4.284 E F0(,)A F1
(update)4.284 E F0(,)A F1(reset)4.284 E F0(and)4.284 E F1(terminate)
4.283 E F0 1.283(are ne)4.283 F 4.283(wa)-.3 G 1.283
(nd distinct constants of a)-4.283 F(ne)72 204 Q 3.017(wa)-.3 G .017
(nd pri)-3.017 F -.3(va)-.3 G .018(te type.).3 F(The)6.018 E 3.018(ya)
-.18 G .018(re introduced by the abo)-3.018 F .378 -.18(ve d)-.18 H
3.018(eclaration. The).18 F 3.018(yc)-.18 G .018(an only be used)-3.018
F(in communications o)72 218 Q -.18(ve)-.18 G 3(rc).18 G
(hannels carrying this protocol \212 for e)-3 E(xample:)-.18 E F1
(CHAN SERVICE to.server:)108 238 Q(CHAN REAL32 from.server:)108 252 Q F0
.95(Notice that tw)72 272 R 3.95(oo)-.12 G 3.95(ft)-3.95 G .95
(he tags \()-3.95 F F1(reset)A F0(and)3.95 E F1(terminate)3.95 E F0 3.95
(\)a)C .95(re follo)-3.95 F .95(wed by no further message.)-.3 F
(The tag is the only information con)72 286 Q -.18(vey)-.48 G(ed.).18 E
(Outputting do)72 303.6 Q(wn v)-.3 E(ariant channels is straightforw)-.3
E(ard \212 for e)-.12 E(xample:)-.18 E F1(SEQ)108 323.6 Q
(to.server ! reset)121.2 337.6 Q(...)121.2 351.6 Q
(to.server ! update; 42; 3.142 \(REAL32\))121.2 365.6 Q(...)121.2 379.6
Q(to.server ! enquire; 42)121.2 393.6 Q(from.server ? x)121.2 407.6 Q
(...)121.2 421.6 Q(to.server ! terminate)121.2 435.6 Q F0(where)72 455.6
Q F1(x)5.852 E F0 2.852(is a)5.852 F F1(REAL32)5.852 E F0 -.3(va)5.852 G
5.852(riable. The).3 F 2.852(inputting side uses a)5.852 F F1(CASE)5.852
E F0 2.852(syntax to distinguish)5.852 F(between the v)72 469.6 Q
(ariant message structures according to the tag \212 for e)-.3 E
(xample:)-.18 E F1(WHILE running)108 489.6 Q(to.server ? CASE)121.2
503.6 Q(enquire; i)134.4 517.6 Q(from.server ! B[i])147.6 531.6 Q
(update; i; B[i])134.4 545.6 Q(SKIP)147.6 559.6 Q(reset)134.4 573.6 Q
6.6(... clear)147.6 587.6 R 6.6(Bb)6.6 G(ack to initial values)-6.6 E
(terminate)134.4 601.6 Q(running := FALSE)147.6 615.6 Q F0(where)72
635.6 Q F1(running)3 E F0(is a)3 E F1(BOOL)3 E F0(,)A F1(i)3 E F0(is an)
3 E F1(INT)3 E F0(and)3 E F1(B)3 E F0(is an array of)3 E F1(REAL32)3 E
F0(s.)A/F2 12/Times-Bold@0 SF(Note:)72 653.2 Q F0 1.161
(if the system is in a state where some of the protocol v)4.161 F 1.161
(ariants will not be sent, the)-.3 F .011(inputting process is not obli\
ged to cater for them \(i.e. we may omit the rele)72 667.2 R -.3(va)-.3
G .012(nt tagged input).3 F .526(lines and associated processes\).)72
681.2 R .526(If that lea)6.526 F -.18(ve)-.24 G 3.526(so).18 G .526
(nly one v)-3.526 F .525(ariant to be serviced, a short-hand)-.3 F
(form of the input syntax may be used \212 for e)72 695.2 Q(xample:)-.18
E F1(to.server ? CASE update; i; B[i])121.2 715.2 Q F2(Note:)72 735.2 Q
F0 .667(if a v)3.667 F .667(ariant arri)-.3 F -.18(ve)-.3 G 3.667(st).18
G .667(hat is not allo)-3.667 F .668
(wed for by the inputting process, this is a run-time)-.3 F
(error and the process)72 749.2 Q F1(STOP)3 E F0 3(s. This)B
(is caused, of course, by a system design error)3 E(.)-.66 E 0 Cg EP
%%Page: 10 10
%%BeginPageSetup
BP
%%EndPageSetup
/F0 12/Times-Roman@0 SF(-10-)278.004 50 Q/F1 12/Times-Bold@0 SF 3
(7.4. Counted)72 86 R(Array Pr)3 E(otocols)-.216 E F0 3.62(Ac)72 103.6 S
.62(ommon form of message is a list of data items whose length is deter\
mined at run-time.)-3.62 F(Such a structure is called a)72 117.6 Q/F2 12
/Times-Italic@0 SF(counted arr)3 E(ay)-.18 E F0
(and is described by the follo)3 E(wing syntax:)-.3 E/F3 11
/Courier-Oblique@0 SF(<count.type>)108 137.6 Q/F4 11/Courier@0 SF(::[])A
F3(<any.type>)A F0(where)72 157.6 Q F3(<count.type>)4.694 E F0 1.694
(is either a)4.694 F F4(BYTE)4.694 E F0 1.694(or an)4.694 F F4(INT)4.694
E F0(and)4.694 E F3(<any.type>)4.694 E F0 1.694(is an)4.694 F(y)-.18 E
F2(occam)4.694 E F0(data)4.694 E 3.2(type. It)72 171.6 R .2
(de\214nes a message with tw)3.2 F 3.2(oc)-.12 G .2
(omponents \212 a count and an array \(whose size is that)-3.2 F 3
(count\). The)72 185.6 R(count may be zero, b)3 E(ut must not be ne)-.24
E -.06(ga)-.18 G(ti).06 E -.18(ve)-.3 G(.).18 E 3.548(Ac)72 203.2 S .549
(ounted array may be a protocol on its o)-3.548 F .549
(wn or a \214eld in a sequential or v)-.3 F .549(ariant protocol.)-.3 F
-.18(Fo)72 217.2 S 3(re).18 G(xample:)-3.18 E F4
(PROTOCOL STRING IS BYTE::[]BYTE:)108 237.2 Q
(PROTOCOL FLEXI.CHUNK IS INT::[]REAL64:)108 251.2 Q F0
(Then, we may declare:)72 271.2 Q F4(CHAN STRING screen:)108 291.2 Q
(CHAN FLEXI.CHUNK flexible:)108 305.2 Q F0(Such)72 325.2 Q F4(STRING)
3.042 E F0 .041(channels allo)3.041 F 3.041(ws)-.3 G .041
(trings of up to 255 characters \(including the null string\) to be)
-3.041 F 3(transmitted. F)72 339.2 R(or e)-.18 E(xample:)-.18 E F4
(VAL []BYTE epitaph IS "Goodbye Cruel World ...":)108 359.2 Q
(VAL BYTE size IS BYTE \(SIZE epitaph\):)108 373.2 Q
(screen ! size::epitaph)108 387.2 Q F0 1.199(This outputs the entire)72
407.2 R F4(epitaph)4.199 E F0 7.199(.A)C 4.199(sa)-7.199 G -.12(lwa)
-4.199 G 1.2(ys, this output process does not complete until).12 F
(the message is input by the process at the other end of the channel.)72
421.2 Q 1.92 -.96(We d)72 438.8 T 3(on).96 G(ot ha)-3 E .36 -.18(ve t)
-.24 H 3(oo).18 G(utput the whole of an array \212 for e)-3 E(xample:)
-.18 E F4(flexible ! n::ping)108 458.8 Q F0 1.112
(outputs only the \214rst)72 478.8 R F4(n)4.112 E F0 1.111
(elements of the)4.112 F F4(REAL64)4.111 E F0(array)4.111 E F4(ping)
4.111 E F0 4.111(,w)C(here)-4.111 E F4(n)4.111 E F0 1.111(is an)4.111 F
F4(INT)4.111 E F0 -.3(va)4.111 G 4.111(lue. If).3 F F4(ping)72 492.8 Q
F0(has less than)3 E F4(n)3 E F0(elements, this is a run-time error)3 E
(.)-.66 E(At the recei)72 510.4 Q(ving end:)-.3 E F4
(screen ? length::text)108 530.4 Q F0 2.873(inputs the)72 550.4 R F4
(BYTE)5.873 E F0 2.873(count of the)5.873 F F4(STRING)5.873 E F0 2.873
(message into)5.873 F F4(length)5.874 E F0 2.874(\(which must be a)5.874
F F4(BYTE)5.874 E F0 -.3(va)72 564.4 S 2.372
(riable\) and the array part into the \214rst).3 F F4(length)5.371 E F0
2.371(elements of)5.371 F F4(text)5.371 E F0 2.371(\(which must be a)
5.371 F(suf)72 578.4 Q(\214ciently long)-.3 E F4(BYTE)3 E F0(array\).)3
E .663(When we need to communicate to and from sections of an array)72
596 R F2 .664(other than)3.663 F F0 .664(the initial one,)3.664 F
(we must use array slices \(see the end of section 5\).)72 610 Q
(Consider:)6 E F4(flexible ? m::[pong FROM start FOR slice])108 630 Q F0
(where)72 650 Q F4(m)3.316 E F0 .315(is an)3.315 F F4(INT)3.315 E F0 -.3
(va)3.315 G(riable,).3 E F4(start)3.315 E F0(and)3.315 E F4(slice)3.315
E F0(are)3.315 E F4(INT)3.315 E F0 -.3(va)3.315 G .315(lues and).3 F F4
(pong)3.315 E F0 .315(is a)3.315 F F4(REAL64)3.315 E F0(array)3.315 E
1.596(with at least)72 664 R F4 -2.004(\(start + slice\))4.596 F F0
4.596(elements. This)4.596 F 1.597(process inputs the)4.596 F F4
(FLEXI.CHUNK)4.597 E F0(count)4.597 E -.3(va)72 678 S .8(lue into).3 F
F4(m)3.8 E F0 6.8(.T)C .8(he array part of the message goes into the)
-6.8 F F4(m)3.8 E F0(consecuti)3.799 E 1.159 -.18(ve e)-.3 H .799
(lements of).18 F F4(pong)3.799 E F0(starting from inde)72 692 Q(x)-.18
E F4(start)3 E F0 6(.T)C(here will be a run-time error unless)-6 E F4(0)
3 E/F5 12/Symbol SF<a3>3 E F4(m)3 E F5<a3>3 E F4(slice)3 E F0(.)A 0 Cg
EP
%%Page: 11 11
%%BeginPageSetup
BP
%%EndPageSetup
/F0 12/Times-Roman@0 SF(-11-)278.004 50 Q/F1 12/Times-Bold@0 SF 3(8. Ab)
72 86 R(br)-.12 E -.18(ev)-.216 G(iations).18 E 3(8.1. Refer)72 114 R
(ence Ab)-.216 E(br)-.12 E -.18(ev)-.216 G(iations).18 E F0(An)72 131.6
Q(y)-.18 E/F2 12/Times-Italic@0 SF(occam)4.552 E F0 1.553(item \(i.e. a\
 piece of data, a channel, a timer or a port\) may be passed as an)4.552
F F2(actual)72 145.6 Q F0 .542(parameter to a \(matching\))3.542 F F2
(formal)3.542 E F0 .542(parameter of a)3.542 F/F3 11/Courier@0 SF(PROC)
3.542 E F0 6.542(.D)C .542(uring the e)-6.542 F -.18(xe)-.18 G .542
(cution of the).18 F F3(PROC)72 159.6 Q F0(body)3 E 3(,t)-.78 G
(he item acquires the formal parameter name as an `alias' or `abbre)-3 E
(viation'.)-.3 E 1.919(Aliasing \(i.e. allo)72 177.2 R 1.919
(wing one item to be referred to by dif)-.3 F 1.92
(ferent names\) is uncontrolled in)-.3 F 1.712
(traditional programming languages and leads to semantic comple)72 191.2
R 1.711(xities that are generally)-.18 F .724(underestimated, easily o)
72 205.2 R -.18(ve)-.18 G(rlook).18 E .725(ed and cause serious error)
-.12 F 6.725(.I)-.66 G(n)-6.725 E F2(occam)3.725 E F0 3.725(,w)C .725
(hen a ne)-3.725 F 3.725(wn)-.3 G .725(ame is)-3.725 F .003
(introduced for an e)72 219.2 R .003(xisting item, we are only allo)-.18
F .003(wed to use the ne)-.3 F 3.003(wn)-.3 G .003
(ame \212 the old name is)-3.003 F 3.883(banned! W)72 233.2 R 3.883(eh)
-.96 G -2.7 -.24(av e)-3.883 H 3.883(,t).24 G .883
(herefore, the assurance that dif)-3.883 F .883
(ferent names in the same scope refer to)-.3 F(dif)72 247.2 Q .857
(ferent items \212 re)-.3 F -.06(ga)-.18 G .856(rdless of the conte).06
F .856(xt in which the)-.18 F 3.856(ya)-.18 G(ppear)-3.856 E 6.856(.T)
-.66 G .856(his may seem a minor)-6.856 F(issue, b)72 261.2 Q
(ut it is highly signi\214cant in practice.)-.24 E 5.469 -.96(We s)72
278.8 T 3.549(hall return to parameter mechanisms shortly).96 F 9.55(.F)
-.78 G(irst,)-9.55 E F2(occam)6.55 E F0 3.55(has a direct w)6.55 F 3.55
(ay of)-.12 F(introducing a ne)72 292.8 Q 3(wn)-.3 G(ame for an e)-3 E
(xisting item:)-.18 E/F4 11/Courier-Oblique@0 SF
(<item.specifier> <new.name>)108 312.8 Q F3(IS)6.6 E F4(<old.name>)6.6 E
F3(:)A F0(where)72 332.8 Q F4(<item.specifier>)4.744 E F0 1.743
(indicates a data-type, channel-type, timer or port-type.)4.743 F(The)
7.743 E F4(<old.name>)72 346.8 Q F0 1.401(may be a v)4.4 F 1.401
(ariable, array element or array slice.)-.3 F 1.401
(It names a particular item)7.401 F 1.784(conforming to the)72 360.8 R
F4(<item.specifier>)4.784 E F0 7.784(.T)C(he)-7.784 E F4(<old.name>)
4.784 E F0 1.784(may not be used whilst the)4.784 F F4(<new.name>)72
374.8 Q F0 2.364(is in scope.)5.364 F(An)8.364 E 5.364(yv)-.18 G 2.364
(ariables used in)-5.664 F F4(<old.name>)5.365 E F0 2.365
(to determine indi)5.365 F(vidual)-.3 E .22
(array elements or slices may be used in the scope of)72 388.8 R F4
(<new.name>)3.22 E F0 3.22(,b)C .22(ut may not be changed)-3.46 F
(by it.)72 402.8 Q(The)72 420.4 Q F4(<new.name>)8.212 E F0 5.212
(is said to be an `abbre)8.212 F 5.212(viation' of the)-.3 F F4
(<old.name>)8.213 E F0 11.213(.S)C 5.213(uch an)-11.213 F(abbre)72 434.4
Q .674(viation may occur an)-.3 F .673(ywhere a declaration is allo)-.18
F 3.673(wed. As)-.3 F .673(with declarations, its scope)3.673 F(co)72
448.4 Q -.18(ve)-.18 G 1.119(rs only the process that immediately follo)
.18 F 1.12(ws it.)-.3 F 1.12(Of course, that process may ha)7.12 F 1.48
-.18(ve i)-.24 H(ts).18 E -.3(ow)72 462.4 S 3(nd).3 G
(eclarations and abbre)-3 E 3(viations. F)-.3 F(or e)-.18 E(xample:)-.18
E F3(INT result IS n:)108 482.4 Q([]REAL64 row IS X[i]:)108 496.4 Q
(CHAN FLEXI.CHUNK out! IS flexible!:)108 510.4 Q F4(<process>)108 524.4
Q F0(where)72 544.4 Q F3(n)4.474 E F0 1.474(must be an)4.474 F F3(INT)
4.474 E F0 -.3(va)4.474 G(riable,).3 E F3(X)4.474 E F0 1.474(must be a)
4.474 F F3(REAL64)4.473 E F0(matrix,)4.473 E F3(i)4.473 E F0 1.473
(must be an)4.473 F F3(INT)4.473 E F0 -.3(va)4.473 G(lue).3 E .137
(\(within the range of the \214rst dimension of)72 558.4 R F3(X)3.137 E
F0 3.138(\)a)C(nd)-3.138 E F3(flexible)3.138 E F0 .138
(must be a channel carrying the)3.138 F F3(FLEXI.CHUNK)72 572.4 Q F0
(protocol.)3 E -.48(Wi)72 590 S(thin).48 E F4(<process>)3.568 E F0 3.568
(,t)C .568(he `old' names)-3.568 F F3(n)3.568 E F0(,)A F3(X[i])3.568 E
F0(and)3.568 E F3(flexible)3.567 E F0 .567(may not be used \212 we must)
3.567 F 1.018(use the `ne)72 604 R 1.018(w' names)-.3 F F3(result)4.018
E F0(,)A F3(row)4.018 E F0(and)4.018 E F3(out)4.018 E F0 4.018
(instead. The)4.018 F -.3(va)4.018 G 1.018(lue of).3 F F3(i)4.018 E F0
1.018(may be used b)4.018 F 1.019(ut not)-.24 F 3.731(changed! More)72
618 R(generally)3.731 E 3.731(,i)-.78 G(f)-3.731 E F3(i)3.731 E F0 .731
(were an e)3.731 F .73(xpression, all its constituent v)-.18 F .73
(ariables w)-.3 F .73(ould ha)-.12 F -.18(ve)-.24 G .655(their v)72 632
R .655(alues frozen.)-.3 F .655(Disjoint parts of the matrix)6.655 F F3
(X)3.655 E F0 .656(may be referenced \(e.g.)3.656 F F3(X[j])3.656 E F0
.656(\), b)B .656(ut only)-.24 F 1.876
(if we can guarantee their disjointness \212 e.g.)72 646 R F3(i)4.876 E
F0(and)4.876 E F3(j)4.876 E F0 1.876(are constant v)4.876 F 1.876
(alues, kno)-.3 F 1.876(wn to be)-.3 F(dif)72 660 Q
(ferent at compile time.)-.3 E 1.92 -.96(We m)72 677.6 T(ay).96 E 3(,o)
-.78 G 3(fc)-3 G(ourse, abbre)-3 E(viate abbre)-.3 E(viations:)-.3 E F3
([16]REAL64 section IS [row FROM start FOR 16]:)108 697.6 Q F0 3.738
(where the v)72 717.6 R 3.738(alue of)-.3 F F3(start)6.738 E F0 3.738
(is no)6.738 F 6.738(wf)-.3 G 3.738(rozen within the scope of)-6.738 F
F3(section)6.739 E F0 9.739(.N)C 3.739(ote that)-9.739 F F3(section[0])
72 731.6 Q F0 1.171(corresponds to)4.172 F F3(row[start])4.171 E F0
1.171(which corresponds to)4.171 F F3(X[i][start])4.171 E F0 4.171(,b)C
1.171(ut that)-4.411 F(the latter tw)72 745.6 Q 3(on)-.12 G
(ames may not no)-3 E 3(wb)-.3 G 3(eu)-3 G(sed.)-3 E 0 Cg EP
%%Page: 12 12
%%BeginPageSetup
BP
%%EndPageSetup
/F0 12/Times-Roman@0 SF(-12-)278.004 50 Q/F1 12/Times-Bold@0 SF 3
(8.2. V)72 86 R(alue Ab)-1.104 E(br)-.12 E -.18(ev)-.216 G(iations).18 E
F0(An)72 103.6 Q 4.691(yd)-.18 G(ata)-4.691 E/F2 12/Times-Italic@0 SF
(value)4.691 E F0 1.691(\(i.e. an e)4.691 F 1.691(xpression made from v)
-.18 F 1.692(ariables, literal constants, array elements)-.3 F .785
(and array slices\) may be passed to a \(matching\) formal)72 117.6 R/F3
11/Courier@0 SF(VAL)3.785 E F0 .785(parameter of a)3.785 F F3(PROC)3.785
E F0 6.785(.D)C(uring)-6.785 E .02(the e)72 131.6 R -.18(xe)-.18 G .02
(cution of the).18 F F3(PROC)3.02 E F0(body)3.02 E 3.02(,t)-.78 G .02
(he v)-3.02 F .02(alue acquires the formal parameter name.)-.3 F 1.941
-.96(We m)6.021 H .021(ay not).96 F .365
(assign or input to this name \212 it represents a)72 145.6 R F2(value)
3.365 E F0 3.365(,n)C .365(ot a)-3.365 F F2(variable)3.365 E F0 3.365
(,a)C .365(nd we are not allo)-3.365 F(wed)-.3 E(to change it!)72 159.6
Q(Ag)72 177.2 Q(ain,)-.06 E F2(occam)3 E F0(has a direct w)3 E
(ay of introducing names for data v)-.12 E(alues:)-.3 E F3(VAL)108 197.2
Q/F4 11/Courier-Oblique@0 SF(<data.type> <new.name>)6.6 E F3(IS)6.6 E F4
(<expression>)6.6 E F3(:)A F0 6.003 -.96(We m)72 217.2 T 4.083
(ay not assign or input to).96 F F4(<new.name>)7.083 E F0 10.083(.A)C
4.444 -.18(ny v)-10.083 H 4.084(ariables mentioned within the)-.12 F F4
(<expression>)72 231.2 Q F0 .449
(can continue to be used within the scope of)3.449 F F4(<new.name>)3.448
E F0 3.448(,b)C .448(ut may not be)-3.688 F(changed by that process.)72
245.2 Q(The)6 E F4(<expression>)3 E F0(must yield a v)3 E(alue of)-.3 E
F4(<data.type>)3 E F0(.)A 1.542
(Section 2.1 uses this mechanism to name v)72 262.8 R 1.542(alues kno)
-.3 F 1.543(wn at compile-time \(i.e.)-.3 F(constants\).)7.543 E(Ho)72
276.8 Q(we)-.3 E -.18(ve)-.3 G .96 -.48(r, v).18 H
(alues computed at run-time may also be gi).18 E -.18(ve)-.3 G 3(nn).18
G(ames \212 for e)-3 E(xample:)-.18 E F3
(VAL REAL32 hypoteneuse IS SQRT \(\(a*a\) + \(b*b\)\):)108 296.8 Q
(VAL []REAL64 row IS X[i]:)108 310.8 Q(VAL n IS SIZE row:)108 324.8 Q F4
(<process>)108 338.8 Q F0(where)72 358.8 Q F3(a)3.552 E F0(and)3.552 E
F3(b)3.552 E F0 .552(must be)3.552 F F3(REAL32)3.552 E F0 -.3(va)3.552 G
(lues,).3 E F3(X)3.552 E F0 .552(must be a)3.552 F F3(REAL64)3.551 E F0
.551(matrix and)3.551 F F3(i)3.551 E F0 .551(must be an)3.551 F F3(INT)
3.551 E F0 -.3(va)72 372.8 S 4.416(lue. W).3 F(ithin)-.48 E F4
(<process>)4.416 E F0 4.416(,t)C 1.416(he `ne)-4.416 F 1.416(w' names)
-.3 F F3(hypoteneuse)4.416 E F0(,)A F3(row)4.416 E F0(and)4.417 E F3(n)
4.417 E F0 1.417(represent v)4.417 F(alues)-.3 E 1.435
(that cannot be altered.)72 386.8 R 1.435(The names)7.435 F F3(a)4.435 E
F0(,)A F3(b)4.435 E F0(,)A F3(i)4.435 E F0(and)4.435 E F3(X[i])4.435 E
F0 1.434(may be freely used, b)4.434 F 1.434(ut ag)-.24 F 1.434
(ain their)-.06 F -.3(va)72 400.8 S(lues cannot be altered.).3 E F1
(Note:)72 418.4 Q F0 -.3(va)6.132 G 3.132(lue abbre).3 F(viations)-.3 E
F2(do)6.132 E F0(allo)6.132 E 6.132(wm)-.3 G 3.132
(ultiple names for the same piece of data to be)-6.132 F .292
(introduced \(e.g. when the)72 432.4 R F4(<expression>)3.292 E F0 .292
(is just a v)3.292 F .291(ariable\) and used in the same scope \212)-.3
F -.24(bu)72 446.4 S 3.447(to).24 G .447
(nly after \214rst `freezing' that piece of data to a constant v)-3.447
F 3.448(alue. Dif)-.3 F .448(ferent names for the)-.3 F 1.816
(same constant do not lead to the semantic comple)72 460.4 R 1.816
(xities of dif)-.18 F 1.815(ferent names for the same)-.3 F -.3(va)72
474.4 S(riable.).3 E F1 3(8.3. P)72 502.4 R(arameters and Ab)-.12 E(br)
-.12 E -.18(ev)-.216 G(iations).18 E F2(occam)72 520 Q F3(PROC)3.395 E
F0 .395(calls are formally de\214ned by in-line e)3.395 F .396
(xpansion into the te)-.18 F .396(xt of the)-.18 F F3(PROC)3.396 E F0
(body)3.396 E(.)-.78 E -.18(Fo)72 534 S 2.98(rmal parameters are link)
.18 F 2.98(ed to the actual ones by a sequence of abbre)-.12 F 5.98
(viations. F)-.3 F(or)-.18 E -.18(ex)72 548 S(ample, the call:).18 E F3
(foo \(hello, FALSE, a, q[0]?, q[199]!, p?\))108 568 Q F0
(\(see section 2.5 and 4.6\) transforms into:)72 588 Q F3
(VAL []BYTE s IS hello:)108 608 Q(VAL BOOL mode IS FALSE:)108 622 Q
(INT result IS a:)108 636 Q(CHAN INT in? IS q[0]?:)108 650 Q
(CHAN INT out! IS q[199]!:)108 664 Q(CHAN BYTE pause? IS p?:)108 678 Q
F4(<process>)108 692 Q F0(where)72 712 Q F4(<process>)3 E F0(is the te)3
E(xt of the body of)-.18 E F3(foo)3 E F0(.)A .676
(The point of this relationship is that it enables us to deri)72 729.6 R
1.037 -.18(ve a)-.3 H .677(nti-aliasing la).18 F .677(ws re)-.18 F -.06
(ga)-.18 G .677(rding the).06 F
(use of parameters directly from those for abbre)72 743.6 Q 3
(viations. These)-.3 F(la)3 E(ws are strictly enforced.)-.18 E 0 Cg EP
%%Page: 13 13
%%BeginPageSetup
BP
%%EndPageSetup
/F0 12/Times-Roman@0 SF(-13-)278.004 50 Q -.18(Fo)72 86 S 3.52(re).18 G
.52(xample, if the actual parameter)-3.7 F/F1 11/Courier@0 SF(a)3.52 E
F0 -.12(wa)3.52 G 3.52(si).12 G 3.52(ns)-3.52 G .519
(cope at the point of de\214nition of)-3.52 F F1(foo)3.519 E F0 .519
(and if)3.519 F .918(it w)72 100 R .918(as mentioned in its body)-.12 F
3.918(,t)-.78 G .918(he abo)-3.918 F 1.279 -.18(ve c)-.18 H .919(all w)
.18 F .919(ould lead to a violation of the aliasing rules)-.12 F
(for reference abbre)72 114 Q(viation and w)-.3 E
(ould be rejected by the compiler)-.12 E(.)-.66 E(Similarly)72 131.6 Q 3
(,t)-.78 G(he calls:)-3 E F1
(foo \(hello, FALSE, a, q[0]?, q[199]!, panic[a]?\))108 151.6 Q F0
(where)72 171.6 Q F1(panic)3 E F0(is an array of)3 E F1(BYTE)3 E F0
(channels, and:)3 E F1(foo \(hello, FALSE, a, q[42]?, q[42]!, p?\))108
191.6 Q F0 -.12(wo)72 211.6 S(uld al).12 E -.12(wa)-.12 G
(ys be suppressed.).12 E/F2 12/Times-Bold@0 SF(Note:)72 229.2 Q F0 .658
(free names in)3.658 F F1(PROC)3.658 E F0 .657
(bodies are bound to the global de\214nitions visible at the point of)
3.657 F(the)72 243.2 Q F1(PROC)3.272 E F0 .273
(de\214nition \212 not at the)3.272 F F1(PROC)3.273 E F0 3.273
(call. The)3.273 F(abo)3.273 E .633 -.18(ve t)-.18 H .273
(ransformation is, therefore, subject).18 F .805
(to the condition that an)72 257.2 R 3.805(ys)-.18 G .805
(uch free names do not ha)-3.805 F 1.165 -.18(ve r)-.24 H .805
(e-declarations in scope at the point).18 F 1.332(of the call.)72 271.2
R 1.332(If those names are so re-declared, the re-declarations must be \
eliminated \(by)7.332 F .691(choosing dif)72 285.2 R .691(ferent names \
that cause no similar clashes\) before the transformation becomes)-.3 F
-.3(va)72 299.2 S 3.525(lid. This).3 F(follo)3.525 E .525
(ws precisely the rule for consistent substitution from the)-.3 F/F3 12
/Symbol-Slanted SF(l)3.526 E F0 3.526(-calculus. [This)B 1.175
(rule is rele)72 313.2 R -.3(va)-.3 G 1.175
(nt only for completing the formal de\214nition of the).3 F F1(PROC)
4.174 E F0 1.174(call through in-line)4.174 F .047(substitution of the)
72 327.2 R F1(PROC)3.047 E F0 .047(body \(i.e.)3.047 F F3(b)3.047 E F0
3.047(-reduction\). In)B .048(practice, of course,)3.047 F/F4 12
/Times-Italic@0 SF(occam)3.048 E F0 .048(is not usually)3.048 F
(implemented lik)72 341.2 Q 3(et)-.12 G(his \212 i.e. we do not ha)-3 E
.36 -.18(ve t)-.24 H 3(oa).18 G -.24(vo)-3.24 G
(id such re-declarations.]).24 E F2 3(8.4. And)72 369.2 R(So ...)3 E F0
2.644(The anti-aliasing la)72 386.8 R 2.644
(ws greatly simplify the semantics and implementation of parameter)-.18
F 4.577(passing. F)72 400.8 R 1.577(or reference parameters,)-.18 F F4
(copy-in/copy-out)4.577 E F0(and)4.577 E F4(call-by-addr)4.577 E(ess)
-.444 E F0 1.577(mechanisms are)4.577 F .158
(indistinguishable \212 the compiler may apply whiche)72 414.8 R -.18
(ve)-.3 G 3.157(ri).18 G 3.157(sm)-3.157 G .157(ost ef)-3.157 F .157
(\214cient \(e.g. the former for)-.3 F 1.565
(`small' items and the latter for `lar)72 428.8 R 1.565(ge' ones\).)
-.216 F -.18(Fo)7.565 G 4.565(rv).18 G 1.565(alue parameters,)-4.865 F
F4(copy-in)4.565 E F0(and)4.565 E F4(call-by-)4.565 E(addr)72 442.8 Q
(ess)-.444 E F0 1.161(are also the same \212 so it is perfectly secure \
to pass arrays by address \(since the)4.162 F F1(PROC)72 456.8 Q F0
(body is forbidden to update them\).)3 E 1.92 -.96(To i)72 474.4 T
(llustrate the simplicity that results from).96 E F4(occam)3 E F0 1.32
-.66('s c)D(areful control of aliasing, consider:).66 E F1(SEQ)108 494.4
Q 6.6(n:)121.2 508.4 S 6.6(=n+a)-6.6 G 6.6(n:)121.2 522.4 S 6.6(=n\255a)
-6.6 G F0(where)72 542.4 Q F1(n)4.97 E F0(and)4.97 E F1(a)4.97 E F0(are)
4.97 E F1(INT)4.97 E F0 -.3(va)4.971 G 4.971(riables. Assuming).3 F
1.971(we are not dealing with v)4.971 F 1.971(alues that cause)-.3 F
2.468(arithmetic o)72 556.4 R -.18(ve)-.18 G(r\215o).18 E 4.028 -.78
(w, e)-.3 H -.18(ve).48 G 2.468(rything we kno).18 F 5.468(wa)-.3 G
2.468(bout algebra and the properties of v)-5.468 F(ariables,)-.3 E .546
(assignment and sequencing tells us that the abo)72 570.4 R .906 -.18
(ve c)-.18 H .546(ode changes nothing.).18 F -.48(Wi)6.546 G(th).48 E F4
(occam)3.546 E F0 3.546(,t)C(his)-3.546 E(simple interpretation is the \
correct one and the code may be safely replaced with a)72 584.4 Q F1
(SKIP)3 E F0(.)A -.48(Wi)72 602 S .121(th languages that tak).48 F 3.121
(ea)-.12 G .12(less rigorous approach to)-.001 F -.12(wa)-.3 G .12
(rds aliasing \(such as).12 F F4 -.42(Ja)3.12 G(va).42 E F0(,)A F4 -.96
(Pa)3.12 G(scal).96 E F0(,)A F4(C)3.12 E F0(,)A F4(FORTRAN)72 616 Q F0
(,)A F4(Ada)3.597 E F0(,)A F4(Modula-2)3.597 E F0 3.597(,.)C .597
(..\), the semantics are not so straightforw)-3.597 F 3.598(ard. W)-.12
F 3.598(eh)-.96 G -2.7 -.24(av e)-3.598 H .598(to look)3.838 F .136
(into the conte)72 630 R .136
(xt of the code and check the bindings of the v)-.18 F 3.135
(ariables. If)-.3 F(both)3.135 E F1(n)3.135 E F0(and)3.135 E F1(a)3.135
E F0 .135(refer to)3.135 F .675(the same data item \(e.g.)72 644 R(when)
6.675 E F1(n)3.675 E F0(and)3.675 E F1(a)3.675 E F0 .676
(are formal reference parameters to which the same)3.675 F 1.287
(actual parameter has been supplied\), the abo)72 658 R 1.647 -.18(ve c)
-.18 H 1.287(ode changes that data item to zero!).18 F(The)7.286 E 1.244
(problem is that the)72 672 R F1(a)4.244 E F0(`v)4.244 E 1.245
(ariable' is no longer beha)-.3 F 1.245(ving in the w)-.24 F 1.245
(ay we e)-.12 F 1.245(xpect a v)-.18 F 1.245(ariable to)-.3 F(beha)72
686 Q .502 -.18(ve \212 i)-.24 H .141
(.e. remain the same unless we change it.).18 F(If)6.141 E F1(n)3.141 E
F0 .141(is an alias name for)3.141 F F1(a)3.141 E F0 3.141(,t)C .141
(he v)-3.141 F .141(alue of)-.3 F F1(a)72 700 Q F0(is dif)3 E
(ferent in each of the abo)-.3 E .36 -.18(ve l)-.18 H(ines!!).18 E 4.842
(Such semantic comple)72 717.6 R 4.842
(xities are easily missed when reasoning about algorithms in)-.18 F
2.033(traditional languages.)72 731.6 R -.48(Wi)8.033 G(th).48 E F4
(occam)5.033 E F0 5.033(,d)C(if)-5.033 E 2.032
(ferent names in the same scope refer to dif)-.3 F(ferent)-.3 E .019
(items whate)72 745.6 R -.18(ve)-.3 G 3.019(rt).18 G .019(he conte)
-3.019 F .019(xt and no such singularities of meaning are possible.)-.18
F .02(What you see)6.019 F(is what you get \212 end of story!)72 759.6 Q
0 Cg EP
%%Page: 14 14
%%BeginPageSetup
BP
%%EndPageSetup
/F0 12/Times-Roman@0 SF(-14-)278.004 50 Q/F1 12/Times-Bold@0 SF 3
(9. Retyping)72 86 R F0 1.248(It is sometimes helpful to vie)72 103.6 R
4.248(wap)-.3 G 1.247(iece of data as though it had a dif)-4.248 F 1.247
(ferent type structure)-.3 F .153(from its `natural' one.)72 117.6 R/F2
12/Times-Italic@0 SF(occam)6.153 E F0(allo)3.154 E .154
(ws this with a slight v)-.3 F .154(ariation on its abbre)-.3 F .154
(viation concept.)-.3 F -.18(Fo)72 131.6 S 3(re).18 G(xample, we may ha)
-3.18 E .36 -.18(ve r)-.24 H(eference retyping:).18 E/F3 11
/Courier-Oblique@0 SF(<data.type> <new.name>)108 151.6 Q/F4 11/Courier@0
SF(RETYPES)6.6 E F3(<old.name>)6.6 E F4(:)A F0 .874
(All the anti-aliasing rules for reference abbre)72 171.6 R .874
(viation apply)-.3 F 6.873(.T)-.78 G .873(he only dif)-6.873 F .873
(ference is that the)-.3 F 1.119(type of)72 185.6 R F3(<old.name>)4.119
E F0 1.119(need not be the same as)4.119 F F3(<data.type>)4.119 E F0
4.119(,b)C 1.119(ut its representation must)-4.359 F(occup)72 199.6 Q
3.001(yt)-.12 G .001(he same number of bits.)-3.001 F(Using)6 E F3
(<new.name>)3 E F0 3(,w)C 3(em)-3 G(anipulate the bit-string v)-3 E
(alue of)-.3 E F3(<old.name>)72 213.6 Q F0 1.005
(as though it belonged to the ne)4.005 F(w)-.3 E F3(<data.type>)4.005 E
F0 7.005(.N)C 4.005(ot)-7.005 G(ype-con)-4.005 E -.18(ve)-.48 G 1.006
(rsion tak).18 F(es)-.12 E .862(place \212 the interpretation of the v)
72 227.6 R .861(alue in the ne)-.3 F 3.861(wt)-.3 G .861
(ype is implementation-dependent upon)-3.861 F
(the representation formats for the old and ne)72 241.6 Q 3(wt)-.3 G
(ypes.)-3 E -.18(Fo)72 259.2 S 3(re).18 G(xample, if)-3.18 E F4(n)3 E F0
(is an)3 E F4(INT32)3 E F0 -.3(va)3 G(riable, then:).3 E F4
([4]BYTE b RETYPES n:)108 279.2 Q
(b[0], b[1], b[2], b[3] := b[3], b[2], b[1], b[0])108 293.2 Q F0(re)72
313.2 Q -.18(ve)-.3 G .87
(rses the ordering of the byte representation of).18 F F4(n)3.87 E F0
.871(\(which may be useful in reformatting)3.87 F(data produced by a `l\
ittle-endian' machine for use in a `big-endian' one\).)72 327.2 Q
(Consider also:)72 344.8 Q F4
(REAL64 x RETYPES [buffer FROM speed.index FOR 8]:)108 364.8 Q 6.6(x:)
108 378.8 S 6.6(=s)-6.6 G(peed)-6.6 E F0(where)72 398.8 Q F4(buffer)
3.225 E F0 .225(is a)3.225 F F4(BYTE)3.225 E F0 .225
(array with at least)3.225 F F4 -3.376(\(speed.index + 8\))3.224 F F0
.224(elements and)3.224 F F4(speed)3.224 E F0 .224(is a)3.224 F F4
(REAL64)72 412.8 Q F0 8.227(.T)C 2.227(his packs the)-8.227 F F4(speed)
5.227 E F0 -.3(va)5.227 G 2.227(lue into an 8-byte slice of the array).3
F F4(buffer)5.228 E F0(\(prior)5.228 E(,)-.48 E(perhaps, to output do)72
426.8 Q(wn an unstructured byte-stream\).)-.3 E 1.92 -.96(We a)72 444.4
T(lso ha).96 E .36 -.18(ve v)-.24 H(alue retyping:)-.12 E F4(VAL)108
464.4 Q F3(<data.type> <new.name>)6.6 E F4(RETYPES)6.6 E F3
(<expression>)6.6 E F4(:)A F0(Ag)72 484.4 Q 1.474
(ain, the same rules for v)-.06 F 1.474(alue abbre)-.3 F 1.474
(viation apply to v)-.3 F 1.474(alue retyping.)-.3 F(Ag)7.473 E 1.473
(ain, the type of)-.06 F F3(<expression>)72 498.4 Q F0 1.102
(need not be the same as)4.102 F F3(<data.type>)4.103 E F0 4.103(,b)C
1.103(ut it must ha)-4.343 F 1.463 -.18(ve t)-.24 H 1.103(he same sized)
.18 F(representation.)72 512.4 Q -.18(Fo)72 530 S 3(re).18 G(xample:)
-3.18 E F4(VAL REAL64 x RETYPES [buffer FROM speed.index FOR 8]:)108 550
Q(speed := x)108 564 Q F0(retrie)72 584 Q -.18(ve)-.3 G 5.911(st).18 G
(he)-5.911 E F4(REAL64)5.911 E F0 -.3(va)5.911 G 2.911(lue \(pack).3 F
2.911(ed as an)-.12 F F4([8]BYTE)5.911 E F0 2.911(slice of)5.911 F F4
(buffer)5.911 E F0 5.91(\)i)C 2.91(nto a)-5.91 F F4(REAL64)5.91 E F0 -.3
(va)72 598 S 3(riable. Notice).3 F
(that the original packing could also ha)3 E .36 -.18(ve b)-.24 H
(een done with a v).18 E(alue retyping:)-.3 E F4
(VAL [8]BYTE s RETYPES speed:)108 618 Q
([buffer FROM speed.index FOR 8] := s)108 632 Q F0
(and, indeed, the unpacking could ha)72 652 Q .36 -.18(ve b)-.24 H
(een done by reference:).18 E F4([8]BYTE s RETYPES speed:)108 672 Q 6.6
(s:)108 686 S 6.6(=[)-6.6 G(buffer FROM speed.index FOR 8])-6.6 E F0
.022(Retypings are implementation-dependent in their meaning and should\
 be used with care and)72 706 R 3.427(restraint! Generally)72 720 R
3.427(,t)-.78 G .427(heir scope should be v)-3.427 F .426
(ery localised \212 the)-.18 F 3.426(yo)-.18 G .426(nly e)-3.426 F .426
(xtend o)-.18 F -.18(ve)-.18 G 3.426(ro).18 G .426(ne line)-3.426 F
(in the abo)72 734 Q .36 -.18(ve ex)-.18 H(amples.).18 E 0 Cg EP
%%Page: 15 15
%%BeginPageSetup
BP
%%EndPageSetup
/F0 12/Times-Roman@0 SF(-15-)278.004 50 Q(Occasionally)72 86 Q 4.01(,v)
-.78 G 1.011
(alue retypings are used to de\214ne \(global\) constants \212 i.e the)
-4.31 F 4.011(yh)-.18 G -2.7 -.24(av e)-4.011 H 4.011(av)4.251 G(ery)
-4.191 E(long scope.)72 100 Q -.18(Fo)6 G 3(re).18 G(xample:)-3.18 E/F1
11/Courier@0 SF(VAL REAL64 pi RETYPES #400921FB54442D18 \(INT64\):)108
120 Q(VAL REAL64 infinity RETYPES #7FF0000000000000 \(INT64\):)108 134 Q
(VAL REAL64 NaN RETYPES #7FF0000200000000 \(INT64\):)108 148 Q F0 .199
(\(where the)72 168 R F1(#)3.199 E F0 .198(symbol introduces a he)3.198
F .198(xadecimal literal\) de\214nes)-.18 F/F2 12/Symbol-Slanted SF(p)
3.198 E F0(,)A/F3 16/Symbol SF<a5>3.198 1.4 M F0(and)3.198 -1.4 M/F4 12
/Times-Italic@0 SF(Not-a-Number)3.198 E F0(with)3.198 E 1.089
(full 64-bit precision according to the IEEE/ANSI-754 standard format.)
72 182 R(Expressing)7.09 E F2(p)4.09 E F0 1.09(as a)4.09 F F1(REAL64)72
196 Q F0(literal:)3 E F1
(VAL REAL64 pi IS 3.141592653589793238462643383280 \(REAL64\):)108 216 Q
F0 .358(relies on con)72 236 R -.18(ve)-.48 G .358
(rsion routines in the compiler that are accurate to the last bit.).18 F
.358(The other tw)6.358 F(o)-.12 E -.3(va)72 250 S(lues,).3 E F1
(infinity)3 E F0(and)3 E F1(NaN)3 E F0 3(,c)C(annot be so e)-3 E
(xpressed at all!)-.18 E/F5 12/Times-Bold@0 SF 3(10. P)72 278 R(orts)
-.24 E F0 5.18(External de)72 295.6 R 5.18(vices that pro)-.3 F
(vide/recei)-.18 E 5.54 -.18(ve i)-.3 H 5.18
(nformation via memory-mapped re).18 F 5.18(gisters are)-.18 F(interf)72
309.6 Q(aced to)-.12 E F4(occam)3 E F0(processes through the notion of)3
E F4(ports)3 E F0(.)A .101(Such a re)72 327.2 R .101
(gister must not be modelled by a v)-.18 F .101
(ariable, since it does not beha)-.3 F .461 -.18(ve a)-.24 H 3.101(sa)
.18 G -.3(va)-.001 G .1(riable \212).3 F(consecuti)72 341.2 Q 1.385 -.18
(ve r)-.3 H 1.025(eads will often yield dif).18 F 1.025(ferent v)-.3 F
4.025(alues. It)-.3 F 1.026(must not be modelled by a channel,)4.025 F(\
since read/write access is not synchronised with a matching write/read.)
72 355.2 Q 1.07(In f)72 372.8 R 1.07
(act, ports are asynchronous channels.)-.12 F(The)7.069 E 4.069(yh)-.18
G -2.7 -.24(av e)-4.069 H 4.069(ac)4.309 G(hannel-lik)-4.069 E 4.069(es)
-.12 G 1.069(yntax for declaration)-4.069 F(and use:)72 386.8 Q F1
(PORT INT16 control.register:)108 406.8 Q
(PLACE control.register AT #80000100:)108 420.8 Q
(PORT INT16 data.register:)108 444.6 Q
(PLACE data.register AT #80000104:)108 458.6 Q F0 1.676
(Ports may be declared with an)72 478.6 R(y)-.18 E F4(occam)4.677 E F0
4.677(data-type. The)4.677 F F1(PLACE)4.677 E F0 1.677
(ment line de\214nes the base)B .899(address \(usually e)72 492.6 R .898
(xpressed as a he)-.18 F(xadecimal)-.18 E F1(INT)3.898 E F0 .898
(literal\) of the data-structure representing)3.898 F(the port.)72 506.6
Q F5 -.78(Wa)72 524.2 S -.18(rn).78 G(ing:).18 E F0 3.186
(although these base addresses must be complie-time v)6.186 F 3.187
(alues, current)-.3 F F4(occam)6.187 E F0 .998(compilers mak)72 538.2 R
3.998(en)-.12 G 3.998(oa)-3.998 G .997(ttempt to check that user)-3.998
F .997(-placed structures do not con\215ict either with)-.24 F .201
(each other or with the compiled code, process w)72 552.2 R .202
(orkspace or an)-.12 F 3.202(y`)-.18 G .202(special' locations peculiar)
-3.202 F(to the tar)72 566.2 Q(get architecture!)-.216 E 1.92 -.96(We a)
6 H(re on our o).96 E(wn here!!)-.3 E 4.4(The follo)72 583.8 R 4.4
(wing code b)-.3 F 4.4(usily polls the)-.24 F F1(control.register)7.399
E F0 4.399(until its third bit is set,)7.399 F(whereupon it outputs a)72
597.8 Q F1(value)3 E F0(\(which must be an)3 E F1(INT16)3 E F0 3(\)t)C 3
(ot)-3 G(he)-3 E F1(data.register)3 E F0(:)A F1(VAL INT bit.3 IS 4:)108
617.8 Q(-- bit mask)13.2 E(INT16 control:)108 631.8 Q(SEQ)108 645.8 Q
(control.register ? control)121.2 659.8 Q
(WHILE \(control /\\ bit.3\) = 0)121.2 673.8 Q
(control.register ? control)134.4 687.8 Q(data.register ! value)121.2
701.8 Q F5(Note:)72 721.8 Q F0(`b)3.683 E .683(usy'-polling is not gene\
rally a good idea \212 the loop should at least ha)-.24 F 1.044 -.18
(ve a d)-.24 H(ecent).18 E .023(`sleep' process in its body)72 735.8 R
6.023(.M)-.78 G .023(uch better than an)-6.023 F 3.023(ys)-.18 G(uch)
-3.023 E F4(polling)3.023 E F0 .023(of a control re)3.023 F .022
(gister is to)-.18 F F4(wait)3.022 E F0
(for an `interrupt' signal telling us to proceed \212 see section 11.6)
72 749.8 Q 0 Cg EP
%%Page: 16 16
%%BeginPageSetup
BP
%%EndPageSetup
/F0 12/Times-Roman@0 SF(-16-)278.004 50 Q 1.218
(Input and output on ports are asynchronous operations \212 i.e. the)72
86 R 4.219(yn)-.18 G -2.58 -.3(ev e)-4.219 H 4.219(rg).3 G 1.219
(et block)-4.219 F 1.219(ed and)-.12 F(the)72 100 Q 6.109(ya)-.18 G -.12
(lwa)-6.109 G 3.109(ys terminate.).12 F(The)9.109 E 6.109(ya)-.18 G
3.108(re usually implemented as normal)-6.109 F/F1 12/Times-Italic@0 SF
(loads)6.108 E F0(and)6.108 E F1(stor)6.108 E(es)-.444 E F0(on)6.108 E
(memory)72 114 Q 7.463(.R)-.78 G 1.463(eading from a)-7.463 F/F2 11
/Courier@0 SF(TIMER)4.463 E F0 1.463
(is logically similar to reading from a)4.463 F F2 -2.136(PORT INT)4.464
F F0 7.464(.N)C(ote)-7.464 E .162(that, as happens with timers \(b)72
128 R .161(ut unlik)-.24 F 3.161(ec)-.12 G .161
(hannels\), ports introduce non-determinism into the)-3.161 F
(semantics.)72 142 Q 1.155(Ports should only be used to interf)72 159.6
R(ace)-.12 E F1(occam)4.155 E F0 1.155(systems to non-)4.155 F F1(occam)
A F0(de)4.155 E 4.155(vices. This)-.3 F(means)4.156 E .69
(that a port is used by an)72 173.6 R F1(occam)3.689 E F0 .689
(system only at one end!)3.689 F .689(Ports may not be used to pro)6.689
F(vide)-.18 E(asynchronous communication between parallel processes)72
187.6 Q F1(within)3 E F0(the system!!)3 E/F3 12/Times-Bold@0 SF 3
(11. Odds)72 215.6 R(and Ends)3 E F0 .86(This section summarises the f)
72 233.2 R .861(acilities in the language not so f)-.12 F .861
(ar mentioned.)-.12 F(The)6.861 E 3.861(yp)-.18 G(ro)-3.861 E(vide)-.18
E 1.792(important abstractions that help ease the e)72 247.2 R 1.791
(xpression of algorithms, b)-.18 F 1.791(ut pro)-.24 F 1.791
(vide no `ne)-.18 F(w')-.3 E 1.709(concepts that w)72 261.2 R 1.709
(ould be unf)-.12 F 1.709
(amiliar to users of traditional languages \(although, of course,)-.12 F
F1(occam)72 275.2 Q F0 2.489(enforces a v)5.489 F 2.489
(ery clean and secure binding for them\).)-.18 F(The)8.489 E 5.489(yw)
-.18 G 2.489(ere not introduced)-5.489 F
(earlier because their details w)72 289.2 Q(ould ha)-.12 E .36 -.18
(ve c)-.24 H(aused an unnecessary distraction.).18 E F3 3(11.1. P)72
317.2 R(arallel Assignment)-.12 E F0 2.643 -.96(We h)72 334.8 T -2.7
-.24(av e).96 H .723(seen e)3.963 F .724
(xamples of parallel assignment in code fragments in sections 6 and 9.)
-.18 F(The)6.724 E(full syntax is:)72 348.8 Q/F4 11/Courier-Oblique@0 SF
(<list.of.variables>)108 368.8 Q F2(:=)6.6 E F4(<list.of.expressions>)
6.6 E F0 1.087(where a)72 388.8 R F4(<variable>)4.087 E F0 1.087(is an)
4.087 F 1.087(ything assignable \(i.e. a v)-.18 F 1.086
(ariable, array element or array slice\))-.3 F 2.298(and an)72 402.8 R
F4(<expression>)5.298 E F0 2.299(is an)5.298 F 2.299
(ything that represents a data v)-.18 F 5.299(alue. The)-.3 F 2.299
(lists are comma-)5.299 F(separated, ha)72 416.8 Q .36 -.18(ve e)-.24 H
(qual length and the types of corresponding elements must match.).18 E
(The semantics of parallel assignment has tw)72 434.4 Q 3(oc)-.12 G
(onsecuti)-3 E .36 -.18(ve p)-.3 H(hases:).18 E F2(SEQ)108 454.4 Q 6.6
(... evaluate)121.2 468.4 R(the)6.6 E F4(<list.of.expressions>)6.6 E F2
6.6(... assign)121.2 482.4 R(to the)6.6 E F4(<list.of.variables>)6.6 E
F0 4.012(Each phase operates in parallel.)72 502.4 R(Since)10.012 E F1
(occam)7.012 E F0 -.18(ex)7.012 G 4.011(pressions cause no side-ef).18 F
4.011(fects, no)-.3 F 3.731(restrictions are imposed on the)72 516.4 R
F4(<list.of.expressions>)6.731 E F0 9.731(.O)C 6.731(nt)-9.731 G 3.732
(he other hand, the)-6.731 F F4(<list.of.variables>)72 530.4 Q F0
(must be distinct and independent.)3 E(Thus:)6 E F2(i, i :=)108 550.4 Q
(3, 4)13.2 E F0(is not allo)72 570.4 Q(wed and neither is:)-.3 E F2
(i, a[i] :=)108 590.4 Q(3, 4)13.2 E F0(On the other hand, sw)72 610.4 Q
(apping the v)-.12 E(alues of tw)-.3 E 3(ov)-.12 G(ariables:)-3.3 E F2
(i, j :=)108 630.4 Q(j, i)13.2 E F0 2.527(is al)72 650.4 R -.12(wa)-.12
G 2.527(ys \(thanks to the anti-aliasing la).12 F 2.526(ws\) le)-.18 F
-.06(ga)-.18 G 5.526(l\212a).06 G 5.526(si)-5.526 G 5.526(sa)-5.526 G
2.886 -.18(ny p)-5.526 H 2.526(ermutation of a list of).18 F -.3(va)72
664.4 S(riables \(e.g. see section 9\).).3 E F3 3(11.2. Functions)72
692.4 R(and V)3 E(alue Pr)-1.104 E(ocesses)-.216 E F0(A)72 710 Q F4
(<value.process>)3.481 E F0 .482(is an)3.481 F F1(occam)3.482 E F0 .482
(process that yields a \(list of\) data v)3.482 F 3.482(alues. Because)
-.3 F .482(it is)3.482 F .073(only used as \(part of\) an e)72 724 R
.073(xpression, it must cause no side-ef)-.18 F .073
(fects and be fully deterministic.)-.3 F 2.573
(Thus, it may not change global data-structures, communicate o)72 738 R
-.18(ve)-.18 G 5.573(rg).18 G 2.573(lobal channels nor)-5.573 F .322
(declare its o)72 752 R .322(wn ports or timers.)-.3 F(Ho)6.322 E(we)-.3
E -.18(ve)-.3 G 1.282 -.48(r, i).18 H 3.322(tm).48 G .322
(ay declare its o)-3.322 F .322(wn data v)-.3 F .321(ariables and e)-.3
F -.18(xe)-.18 G(cute).18 E 1.948(\(serial\) algorithms using them.)72
766 R -.18(Pa)7.948 G 1.948
(rallel code is forbidden \212 although this is some).18 F(what)-.3 E
-.18(ove)72 780 S -.24(r-).18 G(restricti).24 E .36 -.18(ve \()-.3 H
(only).18 E F2(ALT)3 E F0 3(ss)C(hould be disallo)-3 E(wed!\).)-.3 E 0
Cg EP
%%Page: 17 17
%%BeginPageSetup
BP
%%EndPageSetup
/F0 12/Times-Roman@0 SF(-17-)278.004 50 Q(The syntax for a)72 86 Q/F1 11
/Courier-Oblique@0 SF(<value.process>)3 E F0(is:)3 E F1
(<local.declarations.and.abbreviations>)108 106 Q/F2 11/Courier@0 SF
(VALOF)108 120 Q F1(<process>)121.2 134 Q F2(RESULT)121.2 148 Q F1
(<list.of.expressions>)6.6 E F0(The)72 168 Q F1(<process>)9.038 E F0
6.038(is an)9.038 F(y)-.18 E/F3 12/Times-Italic@0 SF(occam)9.038 E F0
6.037(process \(subject to the abo)9.038 F 6.397 -.18(ve r)-.18 H 9.037
(estrictions\). The).18 F F1(<list.of.expressions>)72 182 Q F0
(is as in section 11.1.)3 E -.18(Fo)72 199.6 S 3(re).18 G(xample:)-3.18
E F2(average := \(VAL INT n IS SIZE X:)108 219.6 Q(REAL32 sum:)180.6
233.6 Q(VALOF)180.6 247.6 Q(SEQ)193.8 261.6 Q(sum := 0.0 \(REAL32\))207
275.6 Q(SEQ i = 0 FOR n)207 289.6 Q(sum := sum + x [i])220.2 303.6 Q
(RESULT IS sum/n\))193.8 317.6 Q F0(A)72 337.6 Q F1(<value.process>)
10.427 E F0 7.427(may be used in an e)10.427 F 7.427(xpresssion an)-.18
F 7.428(ywhere its resulting)-.18 F F1(<list.of.expressions>)72 351.6 Q
F0 -.12(wo)3.15 G .15(uld be le).12 F -.06(ga)-.18 G 3.15(l. Ho).06 F
(we)-.3 E -.18(ve)-.3 G 1.11 -.48(r, i).18 H .15
(ts real practical role is to set up the).48 F(mechanism for an)72 365.6
Q F3(occam)3 E F0(function.)3 E(A)72 383.2 Q F2(FUNCTION)4.799 E F0
4.799(,l)C(ik)-4.799 E 4.799(ea)-.12 G F1(<value.process>)A F0 4.799(,y)
C 1.799(ields a list of data v)-4.799 F 1.8(alues, occurs only in an)-.3
F -.18(ex)72 397.2 S(pression, causes no side-ef).18 E
(fects and is deterministic:)-.3 E F1(<list.of.types>)108 417.2 Q F2
(FUNCTION)6.6 E F1(<name>)6.6 E F2(\()6.6 E F1(<parameters>)A F2(\))A F1
(<value.process>)121.2 431.2 Q F2(:)108 445.2 Q F3(<to be continued>)72
465.2 Q/F4 12/Times-Bold@0 SF 3(11.3. Case)72 493.2 R(Pr)3 E(ocess)-.216
E F3(<coming soon>)72 510.8 Q F4 3(11.4. Mor)72 538.8 R 3(eL)-.216 G
(ocal Declarations)-3 E F3(<coming soon>)72 556.4 Q F4 3(11.5. Special)
72 584.4 R(Operators)3 E F3(<coming soon>)72 602 Q F4 3(11.6. Placing)72
630 R(Channels and V)3 E(ariables)-1.104 E F3(<coming soon>)72 647.6 Q
F4 3(11.7. Placing)72 675.6 R(Pr)3 E(ocesses)-.216 E F3(<coming soon>)72
693.2 Q 0 Cg EP
%%Trailer
end
%%EOF
