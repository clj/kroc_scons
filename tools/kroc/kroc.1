.\" kroc command man page, last updated 14/03/2005 by Fred Barnes
.TH KROC "1" "December 2005" "kroc 1.4.1" KRoC
.SH NAME
kroc \- KRoC occam system main driver program
.SH SYNOPSIS
.B kroc
[\-C \fICONFIG-FILE\fR] [\fIOPTION\fR]... [\fIFILE\fR]...
.SH DESCRIPTION
.PP
Compiles occam source FILEs and optionally links with other object FILEs
to produce an executable.  For example, to compile the source file \fIfoo.occ\fR
into an executable, you would issue the command:
.PP
	kroc foo.occ
.PP
If successful, this will leave behind an executable called \fIfoo\fR.
.PP
To seperately compile \fIbits1.occ\fR and \fIbits2.occ\fR, then compile \fImain.occ\fR
linking in the bits and the course library, something like the following would be used:
.PP
	kroc -c bits1.occ
.br
	kroc -c bits2.occ
.br
	kroc main.occ bits1.o bits2.o -lcourse
.PP
A path to a specific KRoC configuration file can be specified using the \fB-C\fR option.

.SH DEBUGGING
.PP
When an occam program crashes out with either "deadlock" or "range error",
debugging can be used to find out what went wrong.  To enable, simply compile
with the "-d" flag:
.PP
	kroc -d foo.occ
.PP
when the program crashes now, it will report the filename and line-number where
the error occured.  For deadlock, the state of processes blocked on communication
is reported, again with filename and line-number.

.SH OPTIONS
.\" various options
.TP
\fB\-b\fR, \fB\-\-brief\fR
give brief occ21 error messages.  default behaviour is to print the offending
code along with a few lines either way.  can sometimes get a bit much though.
.TP
\fB\-c\fR, \fB\-\-compile\fR
compile source FILE to object, do not link.
.TP
\fB\-s\fR, \fB\-\-strict\fR
strict usage checking.  this causes the compiler to go into strict usage
checking mode.  undefined warnings become errors and channel direction
specifiers must be used on all references to channel names (except real
channel declarations, which are transparently both).
.TP
\fB\-S\fR
compile in STOP error mode.  instead of aborting on run-time error, a program
compiled in \fIstop\fR error-mode are simply descheduled (with error reporting
if post-mortem debugging is enabled).  This flag is only honoured when compiling
a main code unit (i.e., without \fB\-c\fR) and affects all processes within the
program.
.TP
\fB\-d\fR
enable debugging (post-mortem).  this will capture and report all
run-time errors and attempt to locate deadlocked processes when the whole system deadlocks.
.TP
\fB\-e\fR, \fB\-\-enable\-udc\fR
enable external channel checking.  this is used to turn on the external-channel
checks in the translator and enables \fBPLACE\fR'd channels and the mobile-size-field
in the occam compiler.
.TP
\fB\-h\fR, \fB\-\-help\fR
show usage summary and exit.
.TP
\fB\-I\fR\fIpath\fR
search
\fIpath\fR
for occam libraries and includes.  may be used multiple times.
.TP
\fB\-L\fR\fIpath\fR
search
\fIpath\fR
for native code libraries.  may be used multiple times.
.TP
\fB\-l\fR\fIname\fR
link with native code library lib\fIname\fR.so.
.TP
\fB\-k\fR, \fB\-\-keep\-temp\fR
keep temporary files created during compilation, extended transputer code (.tce) files.
.TP
\fB\-V\fR, \fB\-\-version\fR
print version and exit.
.TP
\fB\-l\fR, \fB\-\-library\fR
generated .so shared library.  this is used to create process libraries for the dynamic
loadable processes extension.
.TP
\fB\-n\fR, \fB\-\-dry\-run\fR
do not run any commands, just print them.
.TP
\fB\-\-oc\-opts\fR=\fIopts\fR
pass these options to the occam compiler (occ21).
.TP
\fB\-\-octran\-opts\fR=\fIopts\fR
pass these options to the translator (tranx86).
.TP
\fB\-\-cc\-opts\fR=\fIopts\fR
pass these options to the C compiler (gcc).
.TP
\fB\-nw\fR, \fB\-\-no\-warn\fR
no warnings from occ21.
.TP
\fB\-nd\fR, \fB\-\-no\-dynmem\fR
disable dynamic memory support.
.TP
\fB\-o\fR \fIfile\fR
output to FILE.
.TP
\fB\-p\fR, \fB\-\-pre\-compile\fR
pre-compile occam source files to extended transputer code (.tce) files.
.TP
\fB\-P\fR, \fB\-\-pause\fR
enable event/schedule check and possible reschedule at loop-ends and on backward jumps.
.TP
\fB\-io\fR, \fB\-\-inline\-io\fR
inline various input/output kernel calls.
.TP
\fB\-is\fR, \fB\-\-inline\-sched\fR
inline various scheduler kernel calls.
.TP
\fB\-it\fR, \fB\-\-inline\-ldtimer\fR
inline load-timer kernel call.
.TP
\fB\-v\fR, \fB\-\-verbose\fR
show commands run during compilation and additional information from the translator.
.TP
\fB\-w\fR, \fB\-\-warn\fR
show additional warnings from occ21.
.TP
\fB\-X6\fR
enable extended input for unhandled CASE inputs (and other experimental features).
.TP
\fB\-X7\fR
enable mobile processes (experimental).
.TP
\fB\-\-nfw\fR
do not wait for globally forked processes when terminating.
.TP
\fB\-\-new\fR
do not wait for unfinished blocking system-calls when terminating.
.SH ADDITIONAL OPTIONS
.TP
\fB\-di\fR
enable insert debugging (post-mortem).  this is used to track the execution
of code for very precise debugging.  use this when attempting to track errors
in external C code.
.TP
\fB\-dm\fR
enable run-time memory access debugging.  this is used as a compiler debugging
aid and requires the run-time system to have been built with the necessary support
(disabled by default).
.TP
\fB\-t2\fR, \fB\-t4\fR, \fB\-t8\fR, \fB\-t9\fR
set occ21 processor compilation class (only t8 (extended), default, is fully supported).
.TP
\fB\-\-rmox\fR
compile for RMoX (experimental).
.TP
\fB\-\-nocc\fR
use the new occam-pi compiler (experimental).
.TP
\fB\-\-nocc\-opts\fR=\fIopts\fR
pass these options to the new occam-pi compiler (experimental).
.TP
\fB\-\-force\-tlp\fR
force top-level PROC interface to be `(CHAN BYTE kyb?, scr!, err!)', regardless of
whether it actually is or not.
.TP
\fB\-\-no\-revalt\fR
disable reversed ALT disabling sequences (enabled by default).
.TP
\fB\-\-use\-revalt\fR
enable reversed ALT disabling sequences (default).
.TP
\fB\-\-no\-zen\fR
disable enhanced ALT enabling (enabled by default).
.TP
\fB\-\-use\-zen\fR
enable enhanced ALT enabling (default).
.TP
\fB\-\-no\-zep\fR
disable ALT pre-enabling (enabled by default).
.TP
\fB\-\-use\-zep\fR
enable ALT pre-enabling (default).
.TP
\fB\-\-ncl\fR
do not link in default compiler libraries.
.TP
\fB\-\-xml\fR
generate XML tree-dump from the compiler.
.TP
\fB\-H\fR, \fB\-\-halterror\fR
use HALT error-mode (default).  This option is only effective on the top-level process
(i.e., one compiled without \fI\-c\fR).
.TP
\fB\-\-cc\fR
print compiler for use with external C code.
.TP
\fB\-\-cflags\fR
print compiler flags to be used when compiling external C code (e.g. CIF processes).
.TP
\fB\-\-tran\fR
print the path to the translator for .tce/.etc files.
.TP
\fB\-\-tranflags\fR
print the flags given to the translator.
.TP
\fB\-\-libpath\fR
print path to occam libraries.
.TP
\fB\-\-incpath\fR
print path to occam includes.
.TP
\fB\-\-cclibpath\fR
print path to host libraries in -L.. form.
.TP
\fB\-\-ccincpath\fR
print path to host includes in -I.. form.
.TP
\fB\-\-linkcc\fR=\fIprog\fR
use the given program for final linking (gcc).

.PP
.SH AUTHOR
See the file AUTHORS in the distribution for the list of contributors to KRoC.  This
manual page is maintained by Fred Barnes <F.R.M.Barnes@kent.ac.uk>
.SH "SEE ALSO"
.BR kmakef (1)
.SH "REPORTING BUGS"
Please report bugs to <kroc-bugs@kent.ac.uk>
.SH COPYRIGHT
Copyright \(co 1996-2005 KRoC AUTHORS
.PP
This program is free software; you can redistribute it
and/or modify it under the terms of the GNU General Public
License as published by the Free Software Foundation;
either version 2 of the License, or (at your option) any
later version.
.PP
This program is distributed in the hope that it will be
useful, but WITHOUT ANY WARRANTY; without even the implied
warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR
PURPOSE.  See the GNU General Public License for more
details.
.PP
You should have received a copy of the GNU General Public
License along with this program; if not, write to the Free
Software Foundation, Inc., 675 Mass Ave, Cambridge, MA
02139, USA.
.PP

