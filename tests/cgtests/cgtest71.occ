-- version control marker $Id: cgtest71.occ,v 1.1 1997/03/31 09:06:37 djb1 Exp $
-- User Defined Operators tests by Jim Moores <jm40@ukc.ac.uk>


PROC cgtest71 (CHAN OF BYTE keyb, scr, err)

  #INCLUDE "cgmain.occ"
  #INCLUDE "cgreal.occ"

  PROC test0 ()
    INT FUNCTION "+" (VAL INT a, VAL INT32 b) IS INT(1):
    INT a:
    INT32 b:
    INT c:
    SEQ
      c := a + b
      check.INT (c,INT(1),"test0")
  :

  PROC test1 ()
    INT32 FUNCTION "+" (VAL INT32 a, VAL INT64 b) IS INT32(2):
    INT32 a:
    INT64 b:
    INT32 c:
    SEQ
      c := a + b
      check.INT32 (c,INT32(2),"test1")
  :

  PROC test2 ()
    INT64 FUNCTION "+" (VAL INT64 a, VAL REAL32 b) IS INT64(3):
    INT64 a:
    REAL32 b:
    INT64 c:
    SEQ
      c := a + b
      check.INT64 (c,INT64(3),"test2")
  :

  PROC test3 ()
    REAL32 FUNCTION "+" (VAL REAL32 a, VAL REAL64 b) IS REAL32 TRUNC(4):
    REAL32 a:
    REAL64 b:
    REAL32 c:
    SEQ
      c := a + b
      check.REAL32 (c,REAL32 TRUNC(4),"test3")
  :

  PROC test4 ()
    REAL64 FUNCTION "+" (VAL REAL64 a, VAL BOOL b) IS REAL64 TRUNC(5):
    REAL64 a:
    BOOL b:
    REAL64 c:
    SEQ
      c := a + b
      check.REAL64 (c,REAL64 TRUNC(5),"test4")
  :

  PROC test5 ()
    BOOL FUNCTION "+" (VAL BOOL a, VAL INT b) IS TRUE:
    BOOL a:
    INT b:
    BOOL c:
    SEQ
      c := a + b
      check.BOOL (c,TRUE,"test5")
  :

  PROC test6 ()
    INT FUNCTION "-" (VAL INT a, VAL INT32 b) IS INT(1):
    INT a:
    INT32 b:
    INT c:
    SEQ
      c := a - b
      check.INT (c,INT(1),"test6")
  :

  PROC test7 ()
    INT32 FUNCTION "-" (VAL INT32 a, VAL INT64 b) IS INT32(2):
    INT32 a:
    INT64 b:
    INT32 c:
    SEQ
      c := a - b
      check.INT32 (c,INT32(2),"test7")
  :

  PROC test8 ()
    INT64 FUNCTION "-" (VAL INT64 a, VAL REAL32 b) IS INT64(3):
    INT64 a:
    REAL32 b:
    INT64 c:
    SEQ
      c := a - b
      check.INT64 (c,INT64(3),"test8")
  :

  PROC test9 ()
    REAL32 FUNCTION "-" (VAL REAL32 a, VAL REAL64 b) IS REAL32 TRUNC(4):
    REAL32 a:
    REAL64 b:
    REAL32 c:
    SEQ
      c := a - b
      check.REAL32 (c,REAL32 TRUNC(4),"test9")
  :

  PROC test10 ()
    REAL64 FUNCTION "-" (VAL REAL64 a, VAL BOOL b) IS REAL64 TRUNC(5):
    REAL64 a:
    BOOL b:
    REAL64 c:
    SEQ
      c := a - b
      check.REAL64 (c,REAL64 TRUNC(5),"test10")
  :

  PROC test11 ()
    BOOL FUNCTION "-" (VAL BOOL a, VAL INT b) IS TRUE:
    BOOL a:
    INT b:
    BOOL c:
    SEQ
      c := a - b
      check.BOOL (c,TRUE,"test11")
  :

  PROC test12 ()
    INT FUNCTION "/" (VAL INT a, VAL INT32 b) IS INT(1):
    INT a:
    INT32 b:
    INT c:
    SEQ
      c := a / b
      check.INT (c,INT(1),"test12")
  :

  PROC test13 ()
    INT32 FUNCTION "/" (VAL INT32 a, VAL INT64 b) IS INT32(2):
    INT32 a:
    INT64 b:
    INT32 c:
    SEQ
      c := a / b
      check.INT32 (c,INT32(2),"test13")
  :

  PROC test14 ()
    INT64 FUNCTION "/" (VAL INT64 a, VAL REAL32 b) IS INT64(3):
    INT64 a:
    REAL32 b:
    INT64 c:
    SEQ
      c := a / b
      check.INT64 (c,INT64(3),"test14")
  :

  PROC test15 ()
    REAL32 FUNCTION "/" (VAL REAL32 a, VAL REAL64 b) IS REAL32 TRUNC(4):
    REAL32 a:
    REAL64 b:
    REAL32 c:
    SEQ
      c := a / b
      check.REAL32 (c,REAL32 TRUNC(4),"test15")
  :

  PROC test16 ()
    REAL64 FUNCTION "/" (VAL REAL64 a, VAL BOOL b) IS REAL64 TRUNC(5):
    REAL64 a:
    BOOL b:
    REAL64 c:
    SEQ
      c := a / b
      check.REAL64 (c,REAL64 TRUNC(5),"test16")
  :

  PROC test17 ()
    BOOL FUNCTION "/" (VAL BOOL a, VAL INT b) IS TRUE:
    BOOL a:
    INT b:
    BOOL c:
    SEQ
      c := a / b
      check.BOOL (c,TRUE,"test17")
  :

  PROC test18 ()
    INT FUNCTION "\" (VAL INT a, VAL INT32 b) IS INT(1):
    INT a:
    INT32 b:
    INT c:
    SEQ
      c := a \ b
      check.INT (c,INT(1),"test18")
  :

  PROC test19 ()
    INT32 FUNCTION "\" (VAL INT32 a, VAL INT64 b) IS INT32(2):
    INT32 a:
    INT64 b:
    INT32 c:
    SEQ
      c := a \ b
      check.INT32 (c,INT32(2),"test19")
  :

  PROC test20 ()
    INT64 FUNCTION "\" (VAL INT64 a, VAL REAL32 b) IS INT64(3):
    INT64 a:
    REAL32 b:
    INT64 c:
    SEQ
      c := a \ b
      check.INT64 (c,INT64(3),"test20")
  :

  PROC test21 ()
    REAL32 FUNCTION "\" (VAL REAL32 a, VAL REAL64 b) IS REAL32 TRUNC(4):
    REAL32 a:
    REAL64 b:
    REAL32 c:
    SEQ
      c := a \ b
      check.REAL32 (c,REAL32 TRUNC(4),"test21")
  :

  PROC test22 ()
    REAL64 FUNCTION "\" (VAL REAL64 a, VAL BOOL b) IS REAL64 TRUNC(5):
    REAL64 a:
    BOOL b:
    REAL64 c:
    SEQ
      c := a \ b
      check.REAL64 (c,REAL64 TRUNC(5),"test22")
  :

  PROC test23 ()
    BOOL FUNCTION "\" (VAL BOOL a, VAL INT b) IS TRUE:
    BOOL a:
    INT b:
    BOOL c:
    SEQ
      c := a \ b
      check.BOOL (c,TRUE,"test23")
  :

  PROC test24 ()
    INT FUNCTION "**" (VAL INT a, VAL INT32 b) IS INT(1):
    INT a:
    INT32 b:
    INT c:
    SEQ
      c := a * b
      check.INT (c,INT(1),"test24")
  :

  PROC test25 ()
    INT32 FUNCTION "**" (VAL INT32 a, VAL INT64 b) IS INT32(2):
    INT32 a:
    INT64 b:
    INT32 c:
    SEQ
      c := a * b
      check.INT32 (c,INT32(2),"test25")
  :

  PROC test26 ()
    INT64 FUNCTION "**" (VAL INT64 a, VAL REAL32 b) IS INT64(3):
    INT64 a:
    REAL32 b:
    INT64 c:
    SEQ
      c := a * b
      check.INT64 (c,INT64(3),"test26")
  :

  PROC test27 ()
    REAL32 FUNCTION "**" (VAL REAL32 a, VAL REAL64 b) IS REAL32 TRUNC(4):
    REAL32 a:
    REAL64 b:
    REAL32 c:
    SEQ
      c := a * b
      check.REAL32 (c,REAL32 TRUNC(4),"test27")
  :

  PROC test28 ()
    REAL64 FUNCTION "**" (VAL REAL64 a, VAL BOOL b) IS REAL64 TRUNC(5):
    REAL64 a:
    BOOL b:
    REAL64 c:
    SEQ
      c := a * b
      check.REAL64 (c,REAL64 TRUNC(5),"test28")
  :

  PROC test29 ()
    BOOL FUNCTION "**" (VAL BOOL a, VAL INT b) IS TRUE:
    BOOL a:
    INT b:
    BOOL c:
    SEQ
      c := a * b
      check.BOOL (c,TRUE,"test29")
  :

  PROC test30 ()
    INT FUNCTION "<" (VAL INT a, VAL INT32 b) IS INT(1):
    INT a:
    INT32 b:
    INT c:
    SEQ
      c := a < b
      check.INT (c,INT(1),"test30")
  :

  PROC test31 ()
    INT32 FUNCTION "<" (VAL INT32 a, VAL INT64 b) IS INT32(2):
    INT32 a:
    INT64 b:
    INT32 c:
    SEQ
      c := a < b
      check.INT32 (c,INT32(2),"test31")
  :

  PROC test32 ()
    INT64 FUNCTION "<" (VAL INT64 a, VAL REAL32 b) IS INT64(3):
    INT64 a:
    REAL32 b:
    INT64 c:
    SEQ
      c := a < b
      check.INT64 (c,INT64(3),"test32")
  :

  PROC test33 ()
    REAL32 FUNCTION "<" (VAL REAL32 a, VAL REAL64 b) IS REAL32 TRUNC(4):
    REAL32 a:
    REAL64 b:
    REAL32 c:
    SEQ
      c := a < b
      check.REAL32 (c,REAL32 TRUNC(4),"test33")
  :

  PROC test34 ()
    REAL64 FUNCTION "<" (VAL REAL64 a, VAL BOOL b) IS REAL64 TRUNC(5):
    REAL64 a:
    BOOL b:
    REAL64 c:
    SEQ
      c := a < b
      check.REAL64 (c,REAL64 TRUNC(5),"test34")
  :

  PROC test35 ()
    BOOL FUNCTION "<" (VAL BOOL a, VAL INT b) IS TRUE:
    BOOL a:
    INT b:
    BOOL c:
    SEQ
      c := a < b
      check.BOOL (c,TRUE,"test35")
  :
  SEQ
    init ("CG test 71","User Defined Operators 2")
    title("Testing all operators function generation.")
    test0()
    test1()
    test2()
    test3()
    test4()
    test5()
    test6()
    test7()
    test8()
    test9()
    test10()
    test11()
    test12()
    test13()
    test14()
    test15()
    test16()
    test17()
    test18()
    test19()
    test20()
    test21()
    test22()
    test23()
    test24()
    test25()
    test26()
    test27()
    test28()
    test29()
    test30()
    test31()
    test32()
    test33()
    test34()
    test35()
    finish ()
:
