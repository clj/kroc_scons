#INCLUDE "defBF534.inc"
#INCLUDE "out.occ"

#PRAGMA EXTERNAL "PROC C.tvmspecial.0.firmware.run.user (VAL []BYTE bytecode, VAL INT ws, vs, ms, VAL []BYTE tlp, VAL INT argc, CHAN BYTE in?, out!) = 0"

VAL INT USER.BYTECODE     IS #0070000:
VAL INT USER.BYTECODE.LEN IS #0010000:

PROC delay.us (VAL INT us)
  TIMER tim:
  INT t:
  SEQ
    tim ? t
    tim ? AFTER (t PLUS us)
:

DATA TYPE SRV.HEADER
  PACKED RECORD
    INT tbc.version:
    INT ws.size:
    INT vs.size:
    INT ms.size:
    INT inst.size:
:

PROC leds ()
  PLACED [PORTGIO.LEN]INT16 port.g.io PORTGIO.ADDR:
  #PRAGMA DEFINED port.g.io

  PLACED [USER.BYTECODE.LEN]BYTE bytecode USER.BYTECODE:
  #PRAGMA DEFINED bytecode

  CHAN BYTE uart0:
  PLACE uart0 AT #0:

  SRV.HEADER header:

  CHAN BYTE out:
  PAR
    WHILE TRUE
      BYTE b:
      SEQ
        out ? b
        uart0 ! b
    SEQ
      port.g.io[PORTGIO] := port.g.io[PORTGIO] /\ (~#0300)

      -- Download header
      out.string ("Waiting for header (", 0, out!)
      out.int (BYTESIN(SRV.HEADER), 0, out!)
      out.string (" bytes)*n", 0, out!)

      []BYTE header RETYPES header:
      SEQ i = 0 FOR SIZE header
        uart0 ? header[i >< 3] -- byteswap from 32bit big-endian

      -- Download bytecode
      out.string ("Got header, ws.size = ", 0, out!)
      out.int (header[ws.size], 0, out!)
      out.string (", vs.size = ", 0, out!)
      out.int (header[vs.size], 0, out!)
      out.string (", ms.size = ", 0, out!)
      out.int (header[ms.size], 0, out!)
      out.string (".*n", 0, out!)

      out.string ("Waiting for bytecode (", 0, out!)
      out.int (header[inst.size], 0, out!)
      out.string (" bytes).*n", 0, out!)

      SEQ i = 0 FOR header[inst.size]
        SEQ
          uart0 ? bytecode[i]
          out ! '#'

      out ! '*n'

      -- Run bytecode
      out.string ("Running bytecode...*n", 0, out!)

      CHAN BYTE in:
      PAR
        SEQ
          VAL INT ws IS header[ws.size]:
          VAL INT vs IS header[vs.size]:
          VAL INT ms IS header[ms.size]:
          VAL INT inst.size IS header[inst.size]:
          C.tvmspecial.0.firmware.run.user ([bytecode FOR inst.size], ws, vs, ms, "?!", 2, in?, out!)
        WHILE TRUE
          BYTE b:
          SEQ
            uart0 ? b
            in ! b
        WHILE TRUE
          SEQ
            port.g.io[PORTGIO] := port.g.io[PORTGIO] >< #0100
            delay.us (500000)
:

