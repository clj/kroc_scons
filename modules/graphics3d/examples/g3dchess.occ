--
--	g3dchess.occ -- simple chess test for graphics3d
--	Copyright (C) 2009 Fred Barnes <frmb@kent.ac.uk>
--
--	This program is free software; you can redistribute it and/or modify
--	it under the terms of the GNU General Public License as published by
--	the Free Software Foundation; either version 2 of the License, or
--	(at your option) any later version.
--
--	This program is distributed in the hope that it will be useful,
--	but WITHOUT ANY WARRANTY; without even the implied warranty of
--	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
--	GNU General Public License for more details.
--
--	You should have received a copy of the GNU General Public License
--	along with this program; if not, write to the Free Software
--	Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301 USA
--

#INCLUDE "course.module"
#INCLUDE "sdlraster.module"
#INCLUDE "graphics3d.module"

--{{{  PROC main (...)
--* Top-level process.
--
-- @param kyb Keyboard channel.
-- @param scr Screen channel.
-- @private
--
PROC main (CHAN BYTE kyb?, SHARED CHAN BYTE scr!)
  VAL INT SCR.WIDTH IS G3D.DEFAULT.WIDTH:
  VAL INT SCR.HEIGHT IS G3D.DEFAULT.HEIGHT:
  SEQ

    CHAN RASTER rc1, rc2, rc3:
    SHARED! CHAN G3D.RENDER.ENGINE! rre:
    CHAN G3D.TMR.CONTROL tmr.ctl:
    PAR
      raster.timed.buffer (rc1?, rc2!, 60, tmr.ctl?)
      raster.display.simple ("Chess test", SCR.WIDTH, SCR.HEIGHT, 3, rc2?, rc3!)
      raster.chain (rc3?, rc1!, rre?, FALSE)

      G3DC.PIECE.CTL! p1.ctl:
      G3D.SCENE.TRANS! sc1.ctl:
      SEQ
        CLAIM rre!
          SEQ
            chessboard.network.spawn (SCR.WIDTH, SCR.HEIGHT, rre!, 8, 1.2, 0.3, sc1.ctl)
  
        --{{{  black pawns
        SEQ i = 0 FOR 8
          G3DC.PIECE.CTL! p.ctl:
          G3D.SCENE.TRANS! sct:
          SEQ
            CLAIM rre!
              chesspiece.network.spawn (SCR.WIDTH, SCR.HEIGHT, rre!, G3D.CP.PAWN, 8, 8, 1.2, 0.3, p.ctl, sct)
            sc1.ctl[link] ! set.next; 100; sct
            p.ctl[in] ! set.pos; 1; i
            p.ctl[pgn.ctl] ! set.face.colours; [#00000000,#00101010,#00000000]
        --}}}
        --{{{  white pawns
        SEQ i = 0 FOR 8
          G3DC.PIECE.CTL! p.ctl:
          G3D.SCENE.TRANS! sct:
          SEQ
            CLAIM rre!
              chesspiece.network.spawn (SCR.WIDTH, SCR.HEIGHT, rre!, G3D.CP.PAWN, 8, 8, 1.2, 0.3, p.ctl, sct)
            sc1.ctl[link] ! set.next; 100; sct
            p.ctl[in] ! set.pos; 6; i
            p.ctl[pgn.ctl] ! set.face.colours; [#00000000,#00A0A0A0,#00000000]
        --}}}

        sc1.ctl[link] ! set.pre.3dshift; [0.0, 3.5, 0.0]

        -- start the whole thing rotating
        sc1.ctl[link] ! set.rot.mode; G3D.ROTATE.MODE.Y
        sc1.ctl[link] ! set.rot.diff; 0.02
:
--}}}

