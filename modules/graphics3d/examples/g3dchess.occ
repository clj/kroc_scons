--
--	g3dchess.occ -- simple chess test for graphics3d
--	Copyright (C) 2009 Fred Barnes <frmb@kent.ac.uk>
--
--	This program is free software; you can redistribute it and/or modify
--	it under the terms of the GNU General Public License as published by
--	the Free Software Foundation; either version 2 of the License, or
--	(at your option) any later version.
--
--	This program is distributed in the hope that it will be useful,
--	but WITHOUT ANY WARRANTY; without even the implied warranty of
--	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
--	GNU General Public License for more details.
--
--	You should have received a copy of the GNU General Public License
--	along with this program; if not, write to the Free Software
--	Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301 USA
--

#INCLUDE "course.module"
#INCLUDE "sdlraster.module"
#INCLUDE "graphics3d.module"


--{{{  PROC main (...)
--* Top-level process.
--
-- @param kyb Keyboard channel.
-- @param scr Screen channel.
-- @private
--
PROC main (CHAN BYTE kyb?, SHARED CHAN BYTE scr!)

  PROC id.dump (CHAN INT in?, SHARED CHAN BYTE out!) --{{{
    WHILE TRUE
      INT i:
      SEQ
        in ? i
        CLAIM out!
          SEQ
            out.string ("poly.id click: ", 0, out!)
            out.int (i, 0, out!)
            out.string ("*n", 0, out!)
  :
  --}}}

  DATA TYPE PIECE.INFO
    RECORD
      INT piece:
      INT colour:
      INT x, y:
  :

  VAL INT SCR.WIDTH IS G3D.DEFAULT.WIDTH:
  VAL INT SCR.HEIGHT IS G3D.DEFAULT.HEIGHT:
  [32]PIECE.INFO pieces:
  SEQ

    --{{{  setup pieces
    SEQ
      -- colours
      SEQ i = 0 FOR 16
        pieces[i][colour] := #00101010
      SEQ i = 16 FOR 16
        pieces[i][colour] := #00A0A0A0

      -- positions
      SEQ i = 0 FOR 8
        SEQ
          pieces[i+0][x] := i
          pieces[i+0][y] := 0
          pieces[i+8][x] := i
          pieces[i+8][y] := 1
          pieces[i+16][x] := i
          pieces[i+16][y] := 6
          pieces[i+24][x] := i
          pieces[i+24][y] := 7

      -- pieces
      SEQ i = 0 FOR 8
        SEQ
          pieces[i+8][piece] := G3D.CP.PAWN
          pieces[i+16][piece] := G3D.CP.PAWN

      pieces[0][piece] := G3D.CP.ROOK
      pieces[1][piece] := G3D.CP.KNIGHT
      pieces[2][piece] := G3D.CP.BISHOP
      pieces[3][piece] := G3D.CP.QUEEN
      pieces[4][piece] := G3D.CP.KING
      pieces[5][piece] := G3D.CP.BISHOP
      pieces[6][piece] := G3D.CP.KNIGHT
      pieces[7][piece] := G3D.CP.ROOK
      pieces[24][piece] := G3D.CP.ROOK
      pieces[25][piece] := G3D.CP.KNIGHT
      pieces[26][piece] := G3D.CP.BISHOP
      pieces[27][piece] := G3D.CP.QUEEN
      pieces[28][piece] := G3D.CP.KING
      pieces[29][piece] := G3D.CP.BISHOP
      pieces[30][piece] := G3D.CP.KNIGHT
      pieces[31][piece] := G3D.CP.ROOK
    --}}}

    CHAN RASTER rc1, rc2, rc3, rc4:
    SHARED! CHAN G3D.RENDER.ENGINE! rre:
    CHAN G3D.TMR.CONTROL tmr.ctl:
    CHAN RASTER.EVENT events, events.in:
    CHAN G3D.SCENE.TRANS! sclink:
    CHAN INT poly.id:
    PAR
      raster.timed.buffer (rc1?, rc2!, 25, tmr.ctl?)
      raster.display ("Chess test", SCR.WIDTH, SCR.HEIGHT, 3, rc2?, rc3!, events!)
      raster.chain (rc3?, rc4!, rre?, FALSE)
      raster.polyidclick (rc4?, rc1!, events?, events.in!, poly.id!, 250000)

      id.dump (poly.id?, scr!)

      G3D.SCENE.TRANS! sc.ctl:
      SEQ
        g3d.scene.spawn (sc.ctl)
        sc.ctl[link] ! set.pre.3dshift; [0.0, 3.5, 0.0]

        g3d.scene.camera (events.in?, sclink?, sc.ctl!)

      SEQ
        G3D.SCENE.TRANS! sc.tmp:
        SEQ
          CLAIM rre!
            chessboard.network.spawn (SCR.WIDTH, SCR.HEIGHT, rre!, 8, 1.2, 0.3, sc.tmp)
          sclink ! sc.tmp
  
        --{{{  create pieces
        SEQ i = 0 FOR SIZE pieces
          IF
            pieces[i][piece] > 0
              G3DC.PIECE.CTL! p.ctl:
              G3D.SCENE.TRANS! sct:
              SEQ
                CLAIM rre!
                  chesspiece.network.spawn (SCR.WIDTH, SCR.HEIGHT, rre!, pieces[i][piece], 6, 8, 1.2, 0.3, p.ctl, sct)
                sclink ! sct
                p.ctl[in] ! set.pos; pieces[i][y]; pieces[i][x]
                p.ctl[pgn.ctl] ! set.face.colours; [#00000000,pieces[i][colour],#00000000]
            TRUE
              SKIP
        --}}}

:
--}}}

