
--
--	Inmos Libraries
--	Copyright (C) 1988, 1989, 1990, 1991, 1993  Inmos Limited
--
--	This library is free software; you can redistribute it and/or
--	modify it under the terms of the GNU Lesser General Public
--	License as published by the Free Software Foundation; either
--	version 2 of the License, or (at your option) any later version.
--
--	This library is distributed in the hope that it will be useful,
--	but WITHOUT ANY WARRANTY; without even the implied warranty of
--	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
--	Lesser General Public License for more details.
--
--	You should have received a copy of the GNU Lesser General Public
--	License along with this library; if not, write to the Free Software
--	Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307  USA
--

#IF (TARGET.BITS.PER.WORD = 32) AND (NOT DEFINED(TARGET.HAS.FPU))

--{{{  #options and #comments
#OPTION "E V"  -- no compiler libs, no vector space
#COMMENT "TA compiler library, V1.3 07/12/92"
#COMMENT "(c) Copyright INMOS Limited 1988"
--}}}

--{{{  #PRAGMA TRANSLATE
#PRAGMA TRANSLATE REAL32TOREAL64 "REAL32TOREAL64%CHK"
--}}}

#INCLUDE "realvals.inc"

--{{{  REAL32TOREAL64
REAL64 FUNCTION REAL32TOREAL64 (VAL REAL32 X)

  --{{{  history
  -- Beta-2 (27feb87)
  -- V1.2 24/02/89
  -- Moved position of CAUSEERROR from end of branch to the beginning of
  -- it to allow compiler to do dead code elimination; V1.3, 7-Dec-92 SRH
  --}}}

  -- From here is identical to the idebug version of this routine - any change
  -- in one should be reflected in the other.

  REAL64 Result :
  VALOF
    --{{{  constants
    VAL low  IS 0 :
    VAL high IS 1 :
    --}}}
    [2]INT Result RETYPES Result :
    VAL INT X RETYPES X :
    INT Yexp :
    [2] INT Yfrac :
    PLACE Yfrac IN WORKSPACE :
    INT Xfrac, Xexp, Places, Carry :
    SEQ
      --{{{  unpack operands
      Xexp,  Xfrac := SHIFTLEFT ( 0,  X<<1,  RealShift)
      Xfrac := Xfrac >> 1                 --room for leading bit
      --{{{  determine special cases
      IF
        --{{{  normal or zero
        (Xexp <> RealExp)
          IF
            (Xexp <> 0)  --normal case
              --{{{  
              SEQ
                Yfrac[high] := Xfrac \/ SignBit
                Yexp := Xexp + (DRealXcess - RealXcess)
              --}}}
            (Xexp \/ Xfrac) = 0           --X is zero
              --{{{  
              SEQ
                Yfrac[high] := 0      --signed zero
                Yexp  := 0
              --}}}
            TRUE                          --X is denormalised
              --{{{  
              SEQ
                Places,  Yfrac[high],  Yfrac[low] := NORMALISE ( Xfrac,  0)
                Yexp := ((DRealXcess - RealXcess) + (1 - Places))
              --}}}
        --}}}
        --{{{  NaN or inf
        TRUE
          SEQ
            CAUSEERROR()
            Yexp := DRealExp
            Yfrac[high] := Xfrac
        --}}}
      --}}}
      --}}}
      --{{{  pack
      Yfrac[1],  Yfrac[0] := SHIFTRIGHT (Yfrac[1]/\(~SignBit),  0,  DRealShift)
      Carry,  Yexp := SHIFTRIGHT ( Yexp,  0,  DRealShift+1)
      Yfrac[1] := Yfrac[1] \/ Yexp
      --}}}
      Result [high] := (Yfrac[high] \/ ( X /\ SignBit))
      Result [low]  := Yfrac[low]
    RESULT Result
:
--}}}

#ENDIF
