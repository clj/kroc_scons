--
--	Inmos Libraries
--	Copyright (C) 1988, 1989, 1990, 1991, 1993  Inmos Limited
--
--	This library is free software; you can redistribute it and/or
--	modify it under the terms of the GNU Lesser General Public
--	License as published by the Free Software Foundation; either
--	version 2 of the License, or (at your option) any later version.
--
--	This library is distributed in the hope that it will be useful,
--	but WITHOUT ANY WARRANTY; without even the implied warranty of
--	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
--	Lesser General Public License for more details.
--
--	You should have received a copy of the GNU Lesser General Public
--	License along with this library; if not, write to the Free Software
--	Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307  USA
--

--** @module occam8

--{{{  #options and #comments
#OPTION "E V"  -- no compiler libraries, no vector space
#COMMENT "T8 compiler library, V1.2 17/04/90"
#COMMENT "(c) Copyright INMOS Limited 1988"
--}}}

#PRAGMA TRANSLATE DFLOATING.UNPACK "DFLOATING.UNPACK%O"

--{{{  T8 and TA code the same
INT, REAL64 FUNCTION DFLOATING.UNPACK (VAL REAL64 Y)

  --{{{  history
  -- NaN behaviour fixed 18-jun-87 PWT
  -- V1.1, 21-Feb-89
  -- Merged TA and T8 code, thus introducing missing CAUSEERRORs to
  -- checked TA code; V1.2, 17-Apr-90 SRH
  --}}}

  #INCLUDE "endian.inc" -- 4-Sep-07

  INT    n :
  REAL64 X :
  VALOF
    --{{{  VALS
    VAL DRealShift     IS             11 :
    VAL DRealExp       IS           #7FF :
    VAL Dundefined.NaN.hi IS   #7FF00002 :
    VAL Dundefined.NaN.lo IS           0 :
    VAL Bias           IS           1023 :
    --}}}
    [2]INT X RETYPES X:
    VAL [2]INT Y RETYPES Y:
    INT exp,frac:
    SEQ
      exp, frac := SHIFTLEFT (0, (Y [hi] << 1), DRealShift)
      X[hi], X[lo] := SHIFTLEFT (Y[hi], Y[lo], DRealShift + 1)
      IF
        exp = DRealExp  -- inf or NaN
          SEQ
            n := DRealExp - Bias
            IF
              (X[hi] \/ X[lo]) = 0 -- inf
                SEQ
                  X [hi] := Dundefined.NaN.hi
                  X [lo] := Dundefined.NaN.lo
              TRUE            -- NaN
                X := Y
            CAUSEERROR()
        (((Y [hi] << 1) \/ Y[lo])= 0) -- 0
          SEQ
            n := DRealExp - Bias
            X [hi] := Dundefined.NaN.hi
            X [lo] := Dundefined.NaN.lo
            CAUSEERROR()
        TRUE
          SEQ
            IF
              exp = 0
                INT places:
                SEQ
                  places, X[hi], X[lo] := NORMALISE (X[hi], X[lo])
                  n := - (Bias + places)
                  X[hi], X[lo] := SHIFTLEFT (X[hi], X[lo], 1)
              TRUE
                n := exp - Bias
            exp, X[lo] := SHIFTRIGHT (X[hi], X[lo], DRealShift + 1)
            exp, X[hi] := SHIFTRIGHT (Bias, X[hi], DRealShift + 1)
    RESULT n, X
:
--}}}
