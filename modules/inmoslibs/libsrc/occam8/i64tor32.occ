
--
--	Inmos Libraries
--	Copyright (C) 1988, 1989, 1990, 1991, 1993  Inmos Limited
--
--	This library is free software; you can redistribute it and/or
--	modify it under the terms of the GNU Lesser General Public
--	License as published by the Free Software Foundation; either
--	version 2 of the License, or (at your option) any later version.
--
--	This library is distributed in the hope that it will be useful,
--	but WITHOUT ANY WARRANTY; without even the implied warranty of
--	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
--	Lesser General Public License for more details.
--
--	You should have received a copy of the GNU Lesser General Public
--	License along with this library; if not, write to the Free Software
--	Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307  USA
--

#IF (TARGET.BITS.PER.WORD = 32) AND (NOT DEFINED(TARGET.HAS.FPU))

--{{{  #options and #comments
#OPTION "E V"  -- no compiler libs, no vector space
#COMMENT "TA compiler library, V1.2 06/04/90"
#COMMENT "(c) Copyright INMOS Limited 1988"
--}}}

--{{{  #PRAGMA TRANSLATE
#PRAGMA TRANSLATE INT64TOREAL32 "INT64TOREAL32%CHK"
--}}}

#INCLUDE "realvals.inc"

--{{{  INT64TOREAL32
REAL32 FUNCTION INT64TOREAL32 (VAL INT Mode, VAL INT64 A)

  -- Beta-2 (27feb87)

  REAL32 Result:
  VALOF
    --{{{  constants
    VAL low  IS 0 :
    VAL high IS 1 :
    --}}}
    INT Result RETYPES Result :
    VAL [2]INT A RETYPES A :
    [2] INT B :
    PLACE B IN WORKSPACE :
    INT Xfrac, Xexp, Ans, Carry, Places :
    --{{{  
    SEQ
      IF
        A [high] < 0
          SEQ
            Carry,  B [low] := LONGDIFF ( 0,  A [low],  0)
            Carry,  B [high] := LONGDIFF ( 0,  A [high],  Carry)
            Ans := SignBit
        TRUE
          SEQ
            B [high] := A [high]
            B [low] := A [low]
            Ans := 0 -- positive
      Places,  B [high],  B [low] := NORMALISE ( B [high],  B [low])
      IF
        Places = (2 * BitsPerWord)
          Result := 0
        TRUE
          --{{{  round and pack
          SEQ
            Xexp := (((2 * BitsPerWord) - 1) - Places) + RealXcess
            Places := B [high] /\ RealExp      --get round bits
            Xexp,  Xfrac := SHIFTRIGHT ( Xexp,  B [high] << 1,  RealShift + 1)
            IF
              (Mode = Truncate) OR ((Places /\ RealRBit) = 0)
                SKIP
              ((B [low] \/ (Places /\ RealXcess)) \/ (Xfrac /\ 1)) = 0
                SKIP                         --round down
              TRUE                           --round up/even
                Xfrac := Xfrac + 1
            Result := Ans \/ Xfrac
          --}}}
    --}}}
    RESULT Result
:
--}}}

#ENDIF
