
--
--	Inmos Libraries
--	Copyright (C) 1988, 1989, 1990, 1991, 1993  Inmos Limited
--
--	This library is free software; you can redistribute it and/or
--	modify it under the terms of the GNU Lesser General Public
--	License as published by the Free Software Foundation; either
--	version 2 of the License, or (at your option) any later version.
--
--	This library is distributed in the hope that it will be useful,
--	but WITHOUT ANY WARRANTY; without even the implied warranty of
--	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
--	Lesser General Public License for more details.
--
--	You should have received a copy of the GNU Lesser General Public
--	License along with this library; if not, write to the Free Software
--	Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307  USA
--

#IF (TARGET.BITS.PER.WORD = 32) AND (NOT DEFINED(TARGET.HAS.FPU))

--{{{  #options and #comments
#OPTION "E V"  -- no compiler libraries, no vector space
#COMMENT "TA compiler library, V1.4 07/04/90"
#COMMENT "(c) Copyright INMOS Limited 1988"
--}}}

--{{{  #PRAGMA TRANSLATE
#PRAGMA TRANSLATE REAL32TOINT32 "REAL32TOINT32%CHK"
--}}}

#INCLUDE "realvals.inc"

--{{{  
INT32 FUNCTION REAL32TOINT32 (VAL INT Mode, VAL REAL32 X)

  --{{{  comment
  -- Round real value to nearest integer or to zero, returns an integer
  -- result.
  --   N         : destination integer
  --   Mode      : Nearest or Truncate
  --   X         : real value to convert from
  --}}}
  --{{{  history
  -- V1.1, 21-Feb-89
  -- V1.2, 24-Feb-89
  -- Changed result type from INT to INT32; V1.3, 10-Jan-90 SRH
  -- V1.4, 7-Apr-90 SRH
  --}}}

  INT N:
  VALOF
    VAL INT X RETYPES X :
    --{{{  constants
    VAL INT REAL32MININT32 IS #CF000000 :
    --}}}
    --{{{  variables
    INT Guard, Xexp, Xfrac, Sign :
    --}}}
    --{{{  code
    SEQ
      Sign := SignBit
      Xexp,  Xfrac := SHIFTLEFT ( 0,  X /\ (~Sign),  RealShift + 1)
      IF
        Xexp = RealExp                     --not valid
          CAUSEERROR()
        Xexp < (RealXcess - 1)             --less than half
          N := 0
        Xexp < RealXcess                   --0.5 to 0.9*
          --{{{  
          IF
            (Mode = Truncate) OR (Xfrac = 0)
              N := 0                       --round down
            (X /\ Sign) = 0                --round up (positive)
              N := 1
            TRUE                           --round up (negative)
              N := -1
          --}}}
        X = REAL32MININT32
          N := Sign                        --most negative integer number
        TRUE
          --{{{  general case
          SEQ
            Xexp := Xexp - RealXcess
            Guard := 1                                  --set top bit
            IF
              Xexp > (BitsPerWord - 2)                  --losing bits
                --{{{  
                SEQ
                  CAUSEERROR()
                  Guard,  Xfrac := SHIFTLEFT ( Guard,  Xfrac,  Xexp - BitsPerWord)
                --}}}
              TRUE
                Guard,  Xfrac := SHIFTLEFT ( Guard,  Xfrac,  Xexp)
            IF
              (Mode = Truncate) OR ((Xfrac /\ Sign) = 0)
                SKIP
              ((Xfrac /\ (~Sign)) \/ (Guard /\ 1)) = 0  --round down
                SKIP
              TRUE                                      --round up/even
                --{{{  
                SEQ
                  Guard := Guard + 1
                  IF
                    (Guard /\ Sign) = 0                 --no overflow
                      SKIP
                    TRUE
                      CAUSEERROR()
                --}}}
            IF
              (X /\ Sign) = 0                           --positive
                N := Guard /\ (~Sign)
              TRUE                                      --negative
                N := -(Guard /\ (~Sign))
          --}}}
    --}}}
    RESULT (INT32 N)
:
--}}}

#ENDIF
