--
--	Semaphore demonstration
--	Copyright (C) 1996  P.H. Welch
--
--	This program is free software; you can redistribute it and/or modify
--	it under the terms of the GNU General Public License as published by
--	the Free Software Foundation; either version 2 of the License, or
--	(at your option) any later version.
--
--	This program is distributed in the hope that it will be useful,
--	but WITHOUT ANY WARRANTY; without even the implied warranty of
--	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
--	GNU General Public License for more details.
--
--	You should have received a copy of the GNU General Public License
--	along with this program; if not, write to the Free Software
--	Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
--

#INCLUDE "semaphore.module"
#INCLUDE "course.module"

PROC semaphore (CHAN OF BYTE keyboard, screen, error)
  --{{{  
  --{{{  #PRAGMA SHARED screen
  #PRAGMA SHARED screen
  --}}}
  --{{{  constants
  VAL []BYTE string IS "Hello World from ... ":
  VAL INT n.clients IS 10:
  --}}}
  --{{{  PROC client (VAL []BYTE string, VAL INT n, SEMAPHORE s, CHAN OF BYTE out)
  PROC client (VAL []BYTE string, VAL INT n, SEMAPHORE s, CHAN OF BYTE out)
    --{{{  
    WHILE TRUE
      SEQ
        --{{{  wait n seconds
        TIMER tim:
        INT t:
        SEQ
          tim ? t
          tim ? AFTER t PLUS (n*1000000)
        --}}}
        claim.semaphore (s)
        out.string (string, 0, out)
        out.int (n, 0, out)
        out.string ("*c*n", 0, out)
        release.semaphore (s)
    --}}}
  :
  --}}}
  --{{{  SEMAPHORE s:
  SEMAPHORE s:
  #PRAGMA SHARED s
  --}}}
  
  SEQ
    initialise.semaphore (s, 1)
    PAR i = 1 FOR n.clients
      client (string, i, s, screen)
  --}}}
:
