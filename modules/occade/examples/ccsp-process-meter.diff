Index: arch/linux/sched.c
===================================================================
--- arch/linux/sched.c	(revision 3234)
+++ arch/linux/sched.c	(working copy)
@@ -141,7 +141,9 @@
 #endif	/* PROCESS_PRIORITY */
 
 mwsyncglock_t mwaltlock;
+int ccsp_process_count = 0;
 
+
 /*}}}*/
 /*{{{  paramter passing variables */
 /*
@@ -1529,6 +1531,7 @@
 	K_SETGLABEL_ONE_IN (X_mreleasep, dmem_size);		/* actually workspace adjust (in words) */
 #endif	/* !TARGET_CPU_SPARC */
 	ENTRY_TRACE (X_mreleasep, "%d", dmem_size);
+	ccsp_process_count--;
 
 	dmem_ptr = (word *)(((char *)Wptr) + ((int)dmem_size * sizeof(word)));
 	dmem_release ((void *)dmem_ptr);
@@ -5577,6 +5580,11 @@
 }
 /*}}}*/
 
+void _ccsp_get_process_count (int ws[])
+{
+	*((int *) ws[0]) = ccsp_process_count;
+}
+
 /*{{{  void kernel_Y_endp (void)*/
 /*
  *	end process (alternate interface)
@@ -5599,6 +5607,7 @@
 SHOW_QUEUES(stderr);
 #endif
 	if (usage[Count]) {
+		ccsp_process_count--;
 		K_JUMP (X_scheduler);
 	}
 #ifdef PROCESS_PRIORITY
@@ -5634,6 +5643,7 @@
 	K_SETGLABEL_THREE_IN (Y_startp, other_workspace, start_offset, return_address);
 #endif
 	ENTRY_TRACE (Y_startp, "%p, %d", other_workspace, start_offset);
+	ccsp_process_count++;
 
 	other_workspace[Iptr] = start_offset + return_address;
 	#ifdef PROCESS_PRIORITY
