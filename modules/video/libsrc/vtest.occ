--
--	vtest.occ -- video test for occam-pi
--	Copyright (C) 2008 Fred Barnes <frmb@kent.ac.uk>
--
--	This program is free software; you can redistribute it and/or modify
--	it under the terms of the GNU General Public License as published by
--	the Free Software Foundation; either version 2 of the License, or
--	(at your option) any later version.
--
--	This program is distributed in the hope that it will be useful,
--	but WITHOUT ANY WARRANTY; without even the implied warranty of
--	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
--	GNU General Public License for more details.
--
--	You should have received a copy of the GNU General Public License
--	along with this program; if not, write to the Free Software
--	Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301 USA
--

-- NOTE: this should disappear eventually, replaced with decent programs in ../examples/

#INCLUDE "course.module"
#INCLUDE "video.module"

VAL []BYTE DEVICE.NAME IS "/dev/video0":


PROC vtest.main (VIDEO.DEVICE dev, CHAN BYTE kyb?, scr!)
  VIDEO.IDENTITY ident:
  BOOL ok:
  SEQ
    out.string ("vtest: opened device [", 0, scr!)
    out.string ([dev[fname] FOR dev[fnamelen]], 0, scr!)
    out.string ("] version ", 0, scr!)
    out.int (dev[api], 0, scr!)
    out.string (" API*n", 0, scr!)

    out.string ("vtest: getting device identity...*n", 0, scr!)
    video.identity (dev, ident, ok)
    IF
      NOT ok
        out.string ("vtest: failed to get device identity*n", 0, scr!)
      TRUE
        SEQ
          out.string ("vtest: device is [", 0, scr!)
          out.string ([ident[name] FOR ident[namelen]], 0, scr!)
          out.string ("]*n", 0, scr!)

    out.string ("vtest: getting information about available cameras...*n", 0, scr!)

    MOBILE []VIDEO.CAMINPUT caminfos:
    SEQ
      video.getcaminputs (dev, caminfos)

      out.string ("vtest: got information about ", 0, scr!)
      out.int (SIZE caminfos, 0, scr!)
      out.string (" cameras:*n", 0, scr!)
      SEQ i = 0 FOR SIZE caminfos
        SEQ
          out.int (i, 2, scr!)
          out.string ("  ", 0, scr!)
          out.int (caminfos[i][id], 4, scr!)
          out.string ("  ", 0, scr!)
          out.string ([caminfos[i][name] FOR caminfos[i][namelen]], 0, scr!)
          out.string (" (", 0, scr!)
          out.int (caminfos[i][minw], 0, scr!)
          out.string ("x", 0, scr!)
          out.int (caminfos[i][minh], 0, scr!)
          out.string (") - (", 0, scr!)
          out.int (caminfos[i][maxw], 0, scr!)
          out.string ("x", 0, scr!)
          out.int (caminfos[i][maxh], 0, scr!)
          out.string (")*n", 0, scr!)

      out.string ("vtest: selecting first camera...*n", 0, scr!)
      video.setcamera (dev, caminfos[0], ok)
      IF
        NOT ok
          out.string ("vtest: failed to select first camera...*n", 0, scr!)
        TRUE
          out.string ("vtest: first camera selected.*n", 0, scr!)

      VIDEO.PICTURE pict:
      SEQ
        out.string ("vtest: getting picture properties...*n", 0, scr!)
        video.getpicture (dev, pict)
        out.string ("bright:   ", 0, scr!)
        out.int (INT pict[brightness], 0, scr!)
        out.string ("*n", 0, scr!)
        out.string ("hue:      ", 0, scr!)
        out.int (INT pict[hue], 0, scr!)
        out.string ("*n", 0, scr!)
        out.string ("colour:   ", 0, scr!)
        out.int (INT pict[colour], 0, scr!)
        out.string ("*n", 0, scr!)
        out.string ("contrast: ", 0, scr!)
        out.int (INT pict[contrast], 0, scr!)
        out.string ("*n", 0, scr!)
        out.string ("white:    ", 0, scr!)
        out.int (INT pict[whiteness], 0, scr!)
        out.string ("*n", 0, scr!)
        out.string ("depth:    ", 0, scr!)
        out.int (INT pict[hue], 0, scr!)
        out.string ("*n", 0, scr!)
        out.string ("palette:  ", 0, scr!)
        out.int (INT pict[palette], 0, scr!)
        VAL INT pal IS INT pict[palette]:
        IF
          (pal >= 0) AND (pal < (SIZE VIDEO.PAL.NAMES))
            SEQ
              out.string (" ", 0, scr!)
              out.string (VIDEO.PAL.NAMES[pal], 0, scr!)
          TRUE
            SKIP
        out.string ("*n", 0, scr!)
:

PROC vtest (CHAN BYTE kyb?, scr!, err!)
  VIDEO.DEVICE vdev:
  BOOL ok:
  SEQ
    out.string ("vtest: hello, opening [", 0, scr!)
    out.string (DEVICE.NAME, 0, scr!)
    out.string ("]*n", 0, scr!)

    video.opendev (DEVICE.NAME, vdev, ok)
    IF
      NOT ok
        out.string ("vtest: failed to open device..*n", 0, scr!)
      TRUE
        SEQ
          vtest.main (vdev, kyb?, scr!)
          video.closedev (vdev, ok)
          IF
            NOT ok
              out.string ("vtest: failed to close device..*n", 0, scr!)
            TRUE
              SKIP
:


